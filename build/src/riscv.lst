GAS LISTING /tmp/ccnTfDU9.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB104:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 7/30/22.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** #include "../h/riscv.hpp"
   5:src/riscv.cpp **** #include "../h/globals.hpp"
   6:src/riscv.cpp **** #include "../lib/console.h"
   7:src/riscv.cpp **** #include "../test/printing.hpp"
   8:src/riscv.cpp **** #include "../h/tcb.hpp"
   9:src/riscv.cpp **** #include "../h/syscall_c.hpp"
  10:src/riscv.cpp **** #include "../lib/mem.h"
  11:src/riscv.cpp **** #include "../h/_sem.hpp"
  12:src/riscv.cpp **** _Buffer * Riscv::bufferIn = nullptr;
  13:src/riscv.cpp **** _Buffer * Riscv::bufferOut = nullptr;
  14:src/riscv.cpp **** TimeList * Riscv::timelist = nullptr;
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 16 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  17:src/riscv.cpp ****     mc_sstatus(SSTATUS_SPP);
  20              		.loc 1 17 5
  21              	.LVL0:
  22              	.LBB49:
  23              	.LBB50:
  24              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 7/20/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OSPROJECT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OSPROJECT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** #include "Buffer.hpp"
  10:src/../h/riscv.hpp **** #include "TimeList.hpp"
  11:src/../h/riscv.hpp **** class Riscv
  12:src/../h/riscv.hpp **** {
  13:src/../h/riscv.hpp **** public:
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  16:src/../h/riscv.hpp ****     static void popSppSpie();
  17:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccnTfDU9.s 			page 2


  18:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  19:src/../h/riscv.hpp ****     static void pushRegisters();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  22:src/../h/riscv.hpp ****     static void popRegisters();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // read register scause
  25:src/../h/riscv.hpp ****     static uint64 r_scause();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // write register scause
  28:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register sepc
  31:src/../h/riscv.hpp ****     static uint64 r_sepc();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register sepc
  34:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // read register stvec
  37:src/../h/riscv.hpp ****     static uint64 r_stvec();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // write register stvec
  40:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // read register stval
  43:src/../h/riscv.hpp ****     static uint64 r_stval();
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // write register stval
  46:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     enum BitMaskSip:uint64
  49:src/../h/riscv.hpp ****     {
  50:src/../h/riscv.hpp ****         SIP_SSIP = (1UL << 1),
  51:src/../h/riscv.hpp ****         SIP_STIP = (1UL << 5),
  52:src/../h/riscv.hpp ****         SIP_SEIP = (1UL << 9),
  53:src/../h/riscv.hpp ****     };
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     // mask set register sip
  56:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     // mask clear register sip
  59:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // read register sip
  62:src/../h/riscv.hpp ****     static uint64 r_sip();
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // write register sip
  65:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  66:src/../h/riscv.hpp ****     //write return Value
  67:src/../h/riscv.hpp ****     static void retValueRISV(uint64 retVal);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     enum BitMaskSstatus:uint64
  71:src/../h/riscv.hpp ****     {
  72:src/../h/riscv.hpp ****         SSTATUS_SIE = (1UL << 1),
  73:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1UL << 5),
  74:src/../h/riscv.hpp ****         SSTATUS_SPP = (1UL << 8),
GAS LISTING /tmp/ccnTfDU9.s 			page 3


  75:src/../h/riscv.hpp ****     };
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     // mask set register sstatus
  78:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // mask clear register sstatus
  81:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     // read register sstatus
  84:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     // write register sstatus
  87:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     //supervisor trap
  90:src/../h/riscv.hpp ****     static void supervisorTrap();
  91:src/../h/riscv.hpp ****     //restores privilage
  92:src/../h/riscv.hpp ****     static void Rest_Priv(bool status);
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     static _Buffer * bufferIn ;
  95:src/../h/riscv.hpp ****     static _Buffer * bufferOut ;
  96:src/../h/riscv.hpp ****     static TimeList * timelist;
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** private:
  99:src/../h/riscv.hpp ****     // obradjuje prekid
 100:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** };
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 105:src/../h/riscv.hpp **** {
 106:src/../h/riscv.hpp ****     uint64 volatile scause;
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 108:src/../h/riscv.hpp ****     return scause;
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 112:src/../h/riscv.hpp **** {
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 117:src/../h/riscv.hpp **** {
 118:src/../h/riscv.hpp ****     uint64 volatile sepc;
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 120:src/../h/riscv.hpp ****     return sepc;
 121:src/../h/riscv.hpp **** }
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 124:src/../h/riscv.hpp **** {
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 129:src/../h/riscv.hpp **** {
 130:src/../h/riscv.hpp ****     uint64 volatile stvec;
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
GAS LISTING /tmp/ccnTfDU9.s 			page 4


 132:src/../h/riscv.hpp ****     return stvec;
 133:src/../h/riscv.hpp **** }
 134:src/../h/riscv.hpp **** 
 135:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 136:src/../h/riscv.hpp **** {
 137:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 141:src/../h/riscv.hpp **** {
 142:src/../h/riscv.hpp ****     uint64 volatile stval;
 143:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 144:src/../h/riscv.hpp ****     return stval;
 145:src/../h/riscv.hpp **** }
 146:src/../h/riscv.hpp **** 
 147:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 148:src/../h/riscv.hpp **** {
 149:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     uint64 volatile sip;
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 166:src/../h/riscv.hpp ****     return sip;
 167:src/../h/riscv.hpp **** }
 168:src/../h/riscv.hpp **** 
 169:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 170:src/../h/riscv.hpp **** {
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 172:src/../h/riscv.hpp **** }
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 175:src/../h/riscv.hpp **** {
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 177:src/../h/riscv.hpp **** }
 178:src/../h/riscv.hpp **** 
 179:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 180:src/../h/riscv.hpp **** {
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  25              		.loc 2 181 5
  26              		.loc 2 181 68 is_stmt 0
  27 000c 93070010 		li	a5,256
  28              	#APP
  29              	# 181 "src/../h/riscv.hpp" 1
 182              	}
  30              		csrc sstatus, a5
GAS LISTING /tmp/ccnTfDU9.s 			page 5


  31              	# 0 "" 2
  32              	.LVL1:
  33              	#NO_APP
  34              	.LBE50:
  35              	.LBE49:
  18:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  36              		.loc 1 18 5 is_stmt 1
  37              		.loc 1 18 39 is_stmt 0
  38              	#APP
  39              	# 18 "src/riscv.cpp" 1
  19              	    __asm__ volatile ("sret");
  40              		csrw sepc, ra
  41              	# 0 "" 2
  42              		.loc 1 19 5 is_stmt 1
  43              		.loc 1 19 30 is_stmt 0
  44              	# 19 "src/riscv.cpp" 1
  20              	}
  45              		sret
  46              	# 0 "" 2
  47              		.loc 1 20 1
  48              	#NO_APP
  49 001c 03348100 		ld	s0,8(sp)
  50              		.cfi_restore 8
  51              		.cfi_def_cfa 2, 16
  52 0020 13010101 		addi	sp,sp,16
  53              		.cfi_def_cfa_offset 0
  54 0024 67800000 		jr	ra
  55              		.cfi_endproc
  56              	.LFE104:
  58              		.align	2
  59              		.globl	_ZN5Riscv9Rest_PrivEb
  61              	_ZN5Riscv9Rest_PrivEb:
  62              	.LFB105:
  21:src/riscv.cpp **** 
  22:src/riscv.cpp **** void Riscv::Rest_Priv(bool status) {
  63              		.loc 1 22 36 is_stmt 1
  64              		.cfi_startproc
  65              	.LVL2:
  66 0028 130101FF 		addi	sp,sp,-16
  67              		.cfi_def_cfa_offset 16
  68 002c 23348100 		sd	s0,8(sp)
  69              		.cfi_offset 8, -8
  70 0030 13040101 		addi	s0,sp,16
  71              		.cfi_def_cfa 8, 0
  23:src/riscv.cpp ****     if(status){
  72              		.loc 1 23 5
  73 0034 630C0500 		beqz	a0,.L4
  24:src/riscv.cpp ****         ms_sstatus(SSTATUS_SPP);
  74              		.loc 1 24 9
  75              	.LVL3:
  76              	.LBB51:
  77              	.LBB52:
 176:src/../h/riscv.hpp **** }
  78              		.loc 2 176 5
 176:src/../h/riscv.hpp **** }
  79              		.loc 2 176 68 is_stmt 0
  80 0038 93070010 		li	a5,256
GAS LISTING /tmp/ccnTfDU9.s 			page 6


  81              	#APP
  82              	# 176 "src/../h/riscv.hpp" 1
  83              		csrs sstatus, a5
  84              	# 0 "" 2
  85              	.LVL4:
  86              	#NO_APP
  87              	.L3:
  88              	.LBE52:
  89              	.LBE51:
  25:src/riscv.cpp ****     }else{
  26:src/riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
  27:src/riscv.cpp ****     }
  28:src/riscv.cpp **** }
  90              		.loc 1 28 1
  91 0040 03348100 		ld	s0,8(sp)
  92              		.cfi_remember_state
  93              		.cfi_restore 8
  94              		.cfi_def_cfa 2, 16
  95 0044 13010101 		addi	sp,sp,16
  96              		.cfi_def_cfa_offset 0
  97 0048 67800000 		jr	ra
  98              	.L4:
  99              		.cfi_restore_state
  26:src/riscv.cpp ****     }
 100              		.loc 1 26 9 is_stmt 1
 101              	.LVL5:
 102              	.LBB53:
 103              	.LBB54:
 181:src/../h/riscv.hpp **** }
 104              		.loc 2 181 5
 181:src/../h/riscv.hpp **** }
 105              		.loc 2 181 68 is_stmt 0
 106 004c 93070010 		li	a5,256
 107              	#APP
 108              	# 181 "src/../h/riscv.hpp" 1
 109              		csrc sstatus, a5
 110              	# 0 "" 2
 111              	.LVL6:
 112              	#NO_APP
 113              	.LBE54:
 114              	.LBE53:
 115              		.loc 1 28 1
 116 0054 6FF0DFFE 		j	.L3
 117              		.cfi_endproc
 118              	.LFE105:
 120              		.section	.rodata.str1.8,"aMS",@progbits,1
 121              		.align	3
 122              	.LC0:
 123 0000 73636175 		.string	"scause code: "
 123      73652063 
 123      6F64653A 
 123      2000
 124 000e 0000     		.align	3
 125              	.LC1:
 126 0010 0A00     		.string	"\n"
 127 0012 00000000 		.align	3
 127      0000
GAS LISTING /tmp/ccnTfDU9.s 			page 7


 128              	.LC2:
 129 0018 73657063 		.string	"sepc code: "
 129      20636F64 
 129      653A2000 
 130 0024 00000000 		.align	3
 131              	.LC3:
 132 0028 73747661 		.string	"stval code: "
 132      6C20636F 
 132      64653A20 
 132      00
 133 0035 000000   		.align	3
 134              	.LC4:
 135 0038 73737461 		.string	"sstatus code: "
 135      74757320 
 135      636F6465 
 135      3A2000
 136              		.text
 137              		.align	2
 138              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 140              	_ZN5Riscv20handleSupervisorTrapEv:
 141              	.LFB106:
  29:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
 142              		.loc 1 29 36 is_stmt 1
 143              		.cfi_startproc
 144              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 145              		.cfi_lsda 0x1b,.LLSDA106
 146 0058 130101F5 		addi	sp,sp,-176
 147              		.cfi_def_cfa_offset 176
 148 005c 2334110A 		sd	ra,168(sp)
 149 0060 2330810A 		sd	s0,160(sp)
 150 0064 233C9108 		sd	s1,152(sp)
 151 0068 23382109 		sd	s2,144(sp)
 152 006c 23343109 		sd	s3,136(sp)
 153 0070 23304109 		sd	s4,128(sp)
 154              		.cfi_offset 1, -8
 155              		.cfi_offset 8, -16
 156              		.cfi_offset 9, -24
 157              		.cfi_offset 18, -32
 158              		.cfi_offset 19, -40
 159              		.cfi_offset 20, -48
 160 0074 1304010B 		addi	s0,sp,176
 161              		.cfi_def_cfa 8, 0
  30:src/riscv.cpp **** 
  31:src/riscv.cpp ****     uint64 args[5];
 162              		.loc 1 31 5
  32:src/riscv.cpp ****     __asm__ volatile ("mv %0, a4" : "=r" (args[4]));
 163              		.loc 1 32 5
 164              		.loc 1 32 52 is_stmt 0
 165              	#APP
 166              	# 32 "src/riscv.cpp" 1
  33              	    __asm__ volatile ("mv %0, a3" : "=r" (args[3]));
 167              		mv a5, a4
 168              	# 0 "" 2
 169              	#NO_APP
 170 007c 2334F4FC 		sd	a5,-56(s0)
 171              		.loc 1 33 5 is_stmt 1
 172              		.loc 1 33 52 is_stmt 0
GAS LISTING /tmp/ccnTfDU9.s 			page 8


 173              	#APP
 174              	# 33 "src/riscv.cpp" 1
  34              	    __asm__ volatile ("mv %0, a2" : "=r" (args[2]));
 175              		mv a5, a3
 176              	# 0 "" 2
 177              	#NO_APP
 178 0084 2330F4FC 		sd	a5,-64(s0)
 179              		.loc 1 34 5 is_stmt 1
 180              		.loc 1 34 52 is_stmt 0
 181              	#APP
 182              	# 34 "src/riscv.cpp" 1
  35              	    __asm__ volatile ("mv %0, a1" : "=r" (args[1]));
 183              		mv a5, a2
 184              	# 0 "" 2
 185              	#NO_APP
 186 008c 233CF4FA 		sd	a5,-72(s0)
 187              		.loc 1 35 5 is_stmt 1
 188              		.loc 1 35 52 is_stmt 0
 189              	#APP
 190              	# 35 "src/riscv.cpp" 1
  36              	    __asm__ volatile ("mv %0, a0" : "=r" (args[0]));
 191              		mv a5, a1
 192              	# 0 "" 2
 193              	#NO_APP
 194 0094 2338F4FA 		sd	a5,-80(s0)
 195              		.loc 1 36 5 is_stmt 1
 196              		.loc 1 36 52 is_stmt 0
 197              	#APP
 198              	# 36 "src/riscv.cpp" 1
  37              	    uint64 scause = r_scause();
 199              		mv a5, a0
 200              	# 0 "" 2
 201              	#NO_APP
 202 009c 2334F4FA 		sd	a5,-88(s0)
 203              		.loc 1 37 5 is_stmt 1
 204              	.LBB55:
 205              	.LBB56:
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 206              		.loc 2 106 5
 107:src/../h/riscv.hpp ****     return scause;
 207              		.loc 2 107 5
 107:src/../h/riscv.hpp ****     return scause;
 208              		.loc 2 107 72 is_stmt 0
 209              	#APP
 210              	# 107 "src/../h/riscv.hpp" 1
 211              		csrr a5, scause
 212              	# 0 "" 2
 213              	#NO_APP
 214 00a4 233CF4F6 		sd	a5,-136(s0)
 108:src/../h/riscv.hpp **** }
 215              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 216              		.loc 2 108 12 is_stmt 0
 217 00a8 833484F7 		ld	s1,-136(s0)
 218              	.LVL7:
 219              	.LBE56:
 220              	.LBE55:
GAS LISTING /tmp/ccnTfDU9.s 			page 9


  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****     if(scause==SOFTWARE){
 221              		.loc 1 39 5 is_stmt 1
 222              	.LBB57:
 223 00ac 9307F0FF 		li	a5,-1
 224 00b0 9397F703 		slli	a5,a5,63
 225 00b4 93871700 		addi	a5,a5,1
 226 00b8 638EF404 		beq	s1,a5,.L40
 227              	.LBE57:
  40:src/riscv.cpp **** 
  41:src/riscv.cpp ****         //interrupt: yes,  couse code: supervisor software interrupt timer
  42:src/riscv.cpp ****         TCB::timeSliceCounter++;
  43:src/riscv.cpp ****         timelist->tick();
  44:src/riscv.cpp ****         if(TCB::timeSliceCounter >= TCB::running->timeSlice) {
  45:src/riscv.cpp **** 
  46:src/riscv.cpp ****             uint64 sepc = r_sepc();
  47:src/riscv.cpp ****             TCB::timeSliceCounter=0;
  48:src/riscv.cpp ****             TCB::dispatch();
  49:src/riscv.cpp ****             w_sepc(sepc);
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****         }
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****     }else if(scause==HARDWARE){
 228              		.loc 1 55 11
 229              	.LBB107:
 230              	.LBB58:
 231 00bc 9307F0FF 		li	a5,-1
 232 00c0 9397F703 		slli	a5,a5,63
 233 00c4 93879700 		addi	a5,a5,9
 234 00c8 638EF40A 		beq	s1,a5,.L41
 235              	.LBE58:
 236              	.LBE107:
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****         //interrupt: yes,  couse code: supervisore external interrupt console
  58:src/riscv.cpp ****         int irq = plic_claim();
  59:src/riscv.cpp **** 
  60:src/riscv.cpp ****         if(irq==10){
  61:src/riscv.cpp ****             while (*((char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT){
  62:src/riscv.cpp ****                 char inpChar = (*(char*)CONSOLE_RX_DATA);
  63:src/riscv.cpp ****                 bufferIn->sys_put(inpChar);
  64:src/riscv.cpp ****             }
  65:src/riscv.cpp **** 
  66:src/riscv.cpp ****         }
  67:src/riscv.cpp **** 
  68:src/riscv.cpp ****         plic_complete(irq);
  69:src/riscv.cpp **** 
  70:src/riscv.cpp ****     } else if(scause==ECALL_S || scause==ECALL_U){
 237              		.loc 1 70 12
 238              	.LBB108:
 239              	.LBB93:
 240              	.LBB59:
 241              		.loc 1 70 31 is_stmt 0
 242 00cc 938784FF 		addi	a5,s1,-8
 243              		.loc 1 70 12
 244 00d0 13071000 		li	a4,1
GAS LISTING /tmp/ccnTfDU9.s 			page 10


 245 00d4 6368F730 		bgtu	a5,a4,.L14
 246              	.LBB60:
  71:src/riscv.cpp **** 
  72:src/riscv.cpp ****             uint64 sepc = r_sepc()+4;
 247              		.loc 1 72 13 is_stmt 1
 248              	.LBB61:
 249              	.LBB62:
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 250              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     return sepc;
 251              		.loc 2 119 5
 119:src/../h/riscv.hpp ****     return sepc;
 252              		.loc 2 119 64 is_stmt 0
 253              	#APP
 254              	# 119 "src/../h/riscv.hpp" 1
 255              		csrr a5, sepc
 256              	# 0 "" 2
 257              	#NO_APP
 258 00dc 2334F4F8 		sd	a5,-120(s0)
 120:src/../h/riscv.hpp **** }
 259              		.loc 2 120 5 is_stmt 1
 120:src/../h/riscv.hpp **** }
 260              		.loc 2 120 12 is_stmt 0
 261 00e0 833484F8 		ld	s1,-120(s0)
 262              	.LVL8:
 263              	.LBE62:
 264              	.LBE61:
 265              		.loc 1 72 36
 266 00e4 93844400 		addi	s1,s1,4
 267              	.LVL9:
  73:src/riscv.cpp ****             uint64 volatile retVal=0;
 268              		.loc 1 73 13 is_stmt 1
 269              		.loc 1 73 29 is_stmt 0
 270 00e8 233C04F4 		sd	zero,-168(s0)
  74:src/riscv.cpp ****         thread_t * handler;
 271              		.loc 1 74 9 is_stmt 1
  75:src/riscv.cpp ****         sem_t*handleSem;
 272              		.loc 1 75 9
  76:src/riscv.cpp ****         sem_t handleSemSem;
 273              		.loc 1 76 9
  77:src/riscv.cpp ****         sem_t volatile id;
 274              		.loc 1 77 9
  78:src/riscv.cpp ****         thread_t volatile thHandl;
 275              		.loc 1 78 9
  79:src/riscv.cpp ****         size_t  volatile size;
 276              		.loc 1 79 9
  80:src/riscv.cpp ****         char c;
 277              		.loc 1 80 9
  81:src/riscv.cpp ****         time_t time;
 278              		.loc 1 81 9
  82:src/riscv.cpp ****         uint64 retchar;
 279              		.loc 1 82 9
  83:src/riscv.cpp ****         void * pointerForDealoc;
 280              		.loc 1 83 9
  84:src/riscv.cpp ****         unsigned init;
 281              		.loc 1 84 9
  85:src/riscv.cpp ****         switch (args[0]) {
GAS LISTING /tmp/ccnTfDU9.s 			page 11


 282              		.loc 1 85 9
 283              		.loc 1 85 23 is_stmt 0
 284 00ec 833784FA 		ld	a5,-88(s0)
 285 00f0 13072004 		li	a4,66
 286 00f4 6366F710 		bgtu	a5,a4,.L15
 287 00f8 93972700 		slli	a5,a5,2
 288 00fc 17070000 		lla	a4,.L17
 288      13070700 
 289 0104 B387E700 		add	a5,a5,a4
 290 0108 83A70700 		lw	a5,0(a5)
 291 010c B387E700 		add	a5,a5,a4
 292 0110 67800700 		jr	a5
 293              		.section	.rodata
 294              		.align	2
 295              		.align	2
 296              	.L17:
 297 0000 00000000 		.word	.L15-.L17
 298 0004 00000000 		.word	.L32-.L17
 299 0008 00000000 		.word	.L31-.L17
 300 000c 00000000 		.word	.L15-.L17
 301 0010 00000000 		.word	.L15-.L17
 302 0014 00000000 		.word	.L15-.L17
 303 0018 00000000 		.word	.L15-.L17
 304 001c 00000000 		.word	.L15-.L17
 305 0020 00000000 		.word	.L15-.L17
 306 0024 00000000 		.word	.L15-.L17
 307 0028 00000000 		.word	.L15-.L17
 308 002c 00000000 		.word	.L15-.L17
 309 0030 00000000 		.word	.L15-.L17
 310 0034 00000000 		.word	.L15-.L17
 311 0038 00000000 		.word	.L15-.L17
 312 003c 00000000 		.word	.L15-.L17
 313 0040 00000000 		.word	.L30-.L17
 314 0044 00000000 		.word	.L29-.L17
 315 0048 00000000 		.word	.L28-.L17
 316 004c 00000000 		.word	.L27-.L17
 317 0050 00000000 		.word	.L26-.L17
 318 0054 00000000 		.word	.L25-.L17
 319 0058 00000000 		.word	.L24-.L17
 320 005c 00000000 		.word	.L15-.L17
 321 0060 00000000 		.word	.L15-.L17
 322 0064 00000000 		.word	.L15-.L17
 323 0068 00000000 		.word	.L15-.L17
 324 006c 00000000 		.word	.L15-.L17
 325 0070 00000000 		.word	.L15-.L17
 326 0074 00000000 		.word	.L15-.L17
 327 0078 00000000 		.word	.L15-.L17
 328 007c 00000000 		.word	.L15-.L17
 329 0080 00000000 		.word	.L15-.L17
 330 0084 00000000 		.word	.L23-.L17
 331 0088 00000000 		.word	.L22-.L17
 332 008c 00000000 		.word	.L21-.L17
 333 0090 00000000 		.word	.L20-.L17
 334 0094 00000000 		.word	.L15-.L17
 335 0098 00000000 		.word	.L15-.L17
 336 009c 00000000 		.word	.L15-.L17
 337 00a0 00000000 		.word	.L15-.L17
GAS LISTING /tmp/ccnTfDU9.s 			page 12


 338 00a4 00000000 		.word	.L15-.L17
 339 00a8 00000000 		.word	.L15-.L17
 340 00ac 00000000 		.word	.L15-.L17
 341 00b0 00000000 		.word	.L15-.L17
 342 00b4 00000000 		.word	.L15-.L17
 343 00b8 00000000 		.word	.L15-.L17
 344 00bc 00000000 		.word	.L15-.L17
 345 00c0 00000000 		.word	.L15-.L17
 346 00c4 00000000 		.word	.L19-.L17
 347 00c8 00000000 		.word	.L15-.L17
 348 00cc 00000000 		.word	.L15-.L17
 349 00d0 00000000 		.word	.L15-.L17
 350 00d4 00000000 		.word	.L15-.L17
 351 00d8 00000000 		.word	.L15-.L17
 352 00dc 00000000 		.word	.L15-.L17
 353 00e0 00000000 		.word	.L15-.L17
 354 00e4 00000000 		.word	.L15-.L17
 355 00e8 00000000 		.word	.L15-.L17
 356 00ec 00000000 		.word	.L15-.L17
 357 00f0 00000000 		.word	.L15-.L17
 358 00f4 00000000 		.word	.L15-.L17
 359 00f8 00000000 		.word	.L15-.L17
 360 00fc 00000000 		.word	.L15-.L17
 361 0100 00000000 		.word	.L15-.L17
 362 0104 00000000 		.word	.L18-.L17
 363 0108 00000000 		.word	.L16-.L17
 364              		.text
 365              	.LVL10:
 366              	.L40:
 367              	.LBE60:
 368              	.LBE59:
 369              	.LBE93:
 370              	.LBB94:
  42:src/riscv.cpp ****         timelist->tick();
 371              		.loc 1 42 9 is_stmt 1
  42:src/riscv.cpp ****         timelist->tick();
 372              		.loc 1 42 30 is_stmt 0
 373 0114 97040000 		la	s1,_ZN3TCB16timeSliceCounterE
 373      83B40400 
 374              	.LVL11:
 375 011c 83B70400 		ld	a5,0(s1)
 376 0120 93871700 		addi	a5,a5,1
 377 0124 23B0F400 		sd	a5,0(s1)
  43:src/riscv.cpp ****         if(TCB::timeSliceCounter >= TCB::running->timeSlice) {
 378              		.loc 1 43 9 is_stmt 1
  43:src/riscv.cpp ****         if(TCB::timeSliceCounter >= TCB::running->timeSlice) {
 379              		.loc 1 43 23 is_stmt 0
 380 0128 17050000 		ld	a0,.LANCHOR0
 380      03350500 
 381              	.LEHB0:
 382 0130 97000000 		call	_ZN8TimeList4tickEv@plt
 382      E7800000 
 383              	.LVL12:
  44:src/riscv.cpp **** 
 384              		.loc 1 44 9 is_stmt 1
 385              	.LBB95:
  44:src/riscv.cpp **** 
GAS LISTING /tmp/ccnTfDU9.s 			page 13


 386              		.loc 1 44 51 is_stmt 0
 387 0138 97070000 		la	a5,_ZN3TCB7runningE
 387      83B70700 
 388 0140 83B70700 		ld	a5,0(a5)
 389 0144 03B78703 		ld	a4,56(a5)
  44:src/riscv.cpp **** 
 390              		.loc 1 44 34
 391 0148 83B70400 		ld	a5,0(s1)
  44:src/riscv.cpp **** 
 392              		.loc 1 44 9
 393 014c 63F8E700 		bleu	a4,a5,.L42
 394              	.L9:
 395              	.LBE95:
  53:src/riscv.cpp **** 
 396              		.loc 1 53 9 is_stmt 1
 397              	.LVL13:
 398              	.LBB101:
 399              	.LBB102:
 159:src/../h/riscv.hpp **** }
 400              		.loc 2 159 5
 159:src/../h/riscv.hpp **** }
 401              		.loc 2 159 64 is_stmt 0
 402 0150 93072000 		li	a5,2
 403              	#APP
 404              	# 159 "src/../h/riscv.hpp" 1
 160:src/../h/riscv.hpp **** 
 405              		csrc sip, a5
 406              	# 0 "" 2
 407              		.loc 2 160 1
 408              	#NO_APP
 409 0158 6F00400B 		j	.L7
 410              	.LVL14:
 411              	.L42:
 412              	.LBE102:
 413              	.LBE101:
 414              	.LBB103:
 415              	.LBB96:
  46:src/riscv.cpp ****             TCB::timeSliceCounter=0;
 416              		.loc 1 46 13 is_stmt 1
 417              	.LBB97:
 418              	.LBB98:
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 419              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     return sepc;
 420              		.loc 2 119 5
 119:src/../h/riscv.hpp ****     return sepc;
 421              		.loc 2 119 64 is_stmt 0
 422              	#APP
 423              	# 119 "src/../h/riscv.hpp" 1
 424              		csrr a5, sepc
 425              	# 0 "" 2
 426              	#NO_APP
 427 0160 2330F4F8 		sd	a5,-128(s0)
 120:src/../h/riscv.hpp **** }
 428              		.loc 2 120 5 is_stmt 1
 120:src/../h/riscv.hpp **** }
 429              		.loc 2 120 12 is_stmt 0
GAS LISTING /tmp/ccnTfDU9.s 			page 14


 430 0164 833404F8 		ld	s1,-128(s0)
 431              	.LVL15:
 432              	.LBE98:
 433              	.LBE97:
  47:src/riscv.cpp ****             TCB::dispatch();
 434              		.loc 1 47 13 is_stmt 1
  47:src/riscv.cpp ****             TCB::dispatch();
 435              		.loc 1 47 34 is_stmt 0
 436 0168 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 436      83B70700 
 437 0170 23B00700 		sd	zero,0(a5)
  48:src/riscv.cpp ****             w_sepc(sepc);
 438              		.loc 1 48 13 is_stmt 1
  48:src/riscv.cpp ****             w_sepc(sepc);
 439              		.loc 1 48 26 is_stmt 0
 440 0174 97000000 		call	_ZN3TCB8dispatchEv@plt
 440      E7800000 
 441              	.LVL16:
  49:src/riscv.cpp **** 
 442              		.loc 1 49 13 is_stmt 1
 443              	.LBB99:
 444              	.LBB100:
 125:src/../h/riscv.hpp **** }
 445              		.loc 2 125 5
 125:src/../h/riscv.hpp **** }
 446              		.loc 2 125 65 is_stmt 0
 447              	#APP
 448              	# 125 "src/../h/riscv.hpp" 1
 126:src/../h/riscv.hpp **** 
 449              		csrw sepc, s1
 450              	# 0 "" 2
 451              		.loc 2 126 1
 452              	#NO_APP
 453 0180 6FF01FFD 		j	.L9
 454              	.LVL17:
 455              	.L41:
 456              	.LBE100:
 457              	.LBE99:
 458              	.LBE96:
 459              	.LBE103:
 460              	.LBE94:
 461              	.LBB104:
 462              	.LBB85:
  58:src/riscv.cpp **** 
 463              		.loc 1 58 9 is_stmt 1
  58:src/riscv.cpp **** 
 464              		.loc 1 58 29 is_stmt 0
 465 0184 97000000 		call	plic_claim@plt
 465      E7800000 
 466              	.LVL18:
 467 018c 93040500 		mv	s1,a0
 468              	.LVL19:
  60:src/riscv.cpp ****             while (*((char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT){
 469              		.loc 1 60 9 is_stmt 1
 470              	.LBB86:
 471 0190 9307A000 		li	a5,10
 472 0194 630AF500 		beq	a0,a5,.L13
GAS LISTING /tmp/ccnTfDU9.s 			page 15


 473              	.LVL20:
 474              	.L12:
 475              	.LBE86:
  68:src/riscv.cpp **** 
 476              		.loc 1 68 9
  68:src/riscv.cpp **** 
 477              		.loc 1 68 22 is_stmt 0
 478 0198 13850400 		mv	a0,s1
 479 019c 97000000 		call	plic_complete@plt
 479      E7800000 
 480              	.LVL21:
 481 01a4 6F008006 		j	.L7
 482              	.L13:
 483              	.LBB89:
 484              	.LBB87:
  61:src/riscv.cpp ****                 char inpChar = (*(char*)CONSOLE_RX_DATA);
 485              		.loc 1 61 13 is_stmt 1
  61:src/riscv.cpp ****                 char inpChar = (*(char*)CONSOLE_RX_DATA);
 486              		.loc 1 61 47
  61:src/riscv.cpp ****                 char inpChar = (*(char*)CONSOLE_RX_DATA);
 487              		.loc 1 61 20 is_stmt 0
 488 01a8 97070000 		la	a5,CONSOLE_STATUS
 488      83B70700 
 489 01b0 83B70700 		ld	a5,0(a5)
 490 01b4 83C70700 		lbu	a5,0(a5)
  61:src/riscv.cpp ****                 char inpChar = (*(char*)CONSOLE_RX_DATA);
 491              		.loc 1 61 47
 492 01b8 93F71700 		andi	a5,a5,1
 493 01bc E38E07FC 		beqz	a5,.L12
 494              	.LBB88:
  62:src/riscv.cpp ****                 bufferIn->sys_put(inpChar);
 495              		.loc 1 62 17 is_stmt 1
  62:src/riscv.cpp ****                 bufferIn->sys_put(inpChar);
 496              		.loc 1 62 33 is_stmt 0
 497 01c0 97070000 		la	a5,CONSOLE_RX_DATA
 497      83B70700 
 498 01c8 83B70700 		ld	a5,0(a5)
 499              	.LVL22:
  63:src/riscv.cpp ****             }
 500              		.loc 1 63 17 is_stmt 1
  63:src/riscv.cpp ****             }
 501              		.loc 1 63 34 is_stmt 0
 502 01cc 83C50700 		lbu	a1,0(a5)
 503 01d0 17050000 		ld	a0,.LANCHOR0+8
 503      03350500 
 504 01d8 97000000 		call	_ZN7_Buffer7sys_putEc@plt
 504      E7800000 
 505              	.LVL23:
 506 01e0 6FF09FFC 		j	.L13
 507              	.LVL24:
 508              	.L29:
 509              	.LBE88:
 510              	.LBE87:
 511              	.LBE89:
 512              	.LBE85:
 513              	.LBB90:
 514              	.LBB75:
GAS LISTING /tmp/ccnTfDU9.s 			page 16


  86:src/riscv.cpp **** 
  87:src/riscv.cpp ****             case THREAD_CREATE:
 515              		.loc 1 87 13 is_stmt 1
  88:src/riscv.cpp ****             handler = (thread_t*)args[1];
 516              		.loc 1 88 13
 517              		.loc 1 88 40 is_stmt 0
 518 01e4 033904FB 		ld	s2,-80(s0)
 519              	.LVL25:
  89:src/riscv.cpp ****             *handler= TCB::initThreadWithRun((Body)args[2],(void*)args[3],(uint64*)args[4]);
 520              		.loc 1 89 13 is_stmt 1
 521              		.loc 1 89 45 is_stmt 0
 522 01e8 033684FC 		ld	a2,-56(s0)
 523 01ec 833504FC 		ld	a1,-64(s0)
 524 01f0 033584FB 		ld	a0,-72(s0)
 525 01f4 97000000 		call	_ZN3TCB17initThreadWithRunEPFvPvES0_Pm@plt
 525      E7800000 
 526              	.LVL26:
 527              		.loc 1 89 21
 528 01fc 2330A900 		sd	a0,0(s2)
  90:src/riscv.cpp **** 
  91:src/riscv.cpp ****                 break;
 529              		.loc 1 91 17 is_stmt 1
 530              	.LVL27:
 531              	.L15:
  92:src/riscv.cpp ****             case THREAD_PREPARE:
  93:src/riscv.cpp ****                     handler = (thread_t*)args[1];
  94:src/riscv.cpp ****                     *handler= TCB::initThreadWithNoRun((Body)args[2],(void*)args[3],(uint64*)args[4
  95:src/riscv.cpp **** 
  96:src/riscv.cpp ****                     break;
  97:src/riscv.cpp ****             case THREAD_START:
  98:src/riscv.cpp ****                 thHandl=(thread_t)args[1];
  99:src/riscv.cpp ****                 retVal= thHandl->start();
 100:src/riscv.cpp ****                 break;
 101:src/riscv.cpp ****             case THREAD_EXIT:
 102:src/riscv.cpp ****                 retVal=TCB::exit();
 103:src/riscv.cpp **** 
 104:src/riscv.cpp ****                 break;
 105:src/riscv.cpp ****             case THREAD_DISPATCH:
 106:src/riscv.cpp ****                 TCB::dispatch();
 107:src/riscv.cpp ****                 break;
 108:src/riscv.cpp ****             case THREAD_DELETE:
 109:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
 110:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 111:src/riscv.cpp ****                     TCB::dispatch();
 112:src/riscv.cpp **** 
 113:src/riscv.cpp ****                 }
 114:src/riscv.cpp ****                 delete thHandl;
 115:src/riscv.cpp ****             case THREAD_JOIN:
 116:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
 117:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 118:src/riscv.cpp ****                     TCB::dispatch();
 119:src/riscv.cpp **** 
 120:src/riscv.cpp ****                 }
 121:src/riscv.cpp ****                 break;
 122:src/riscv.cpp ****             case MEM_FREE:
 123:src/riscv.cpp ****                     pointerForDealoc = (void*)args[1];
 124:src/riscv.cpp ****                     retVal=(uint64)__mem_free(pointerForDealoc);
GAS LISTING /tmp/ccnTfDU9.s 			page 17


 125:src/riscv.cpp ****                 break;
 126:src/riscv.cpp ****             case MEM_ALLOC:
 127:src/riscv.cpp ****                     size = args[1]*MEM_BLOCK_SIZE;
 128:src/riscv.cpp ****                     retVal = (uint64) __mem_alloc(size);
 129:src/riscv.cpp ****                 break;
 130:src/riscv.cpp ****             case SEM_OPEN:
 131:src/riscv.cpp ****                 handleSem = (sem_t*)args[3];
 132:src/riscv.cpp ****                 init = (unsigned)args[2];
 133:src/riscv.cpp ****                 new _sem(handleSem,init);
 134:src/riscv.cpp ****                 retVal=1;
 135:src/riscv.cpp **** 
 136:src/riscv.cpp ****                 break;
 137:src/riscv.cpp ****             case SEM_CLOSE:
 138:src/riscv.cpp ****                 handleSemSem = (sem_t)args[1];
 139:src/riscv.cpp ****                 handleSemSem->close();
 140:src/riscv.cpp ****                 retVal=1;
 141:src/riscv.cpp ****                 break;
 142:src/riscv.cpp ****             case SEM_WAIT:
 143:src/riscv.cpp ****                 id = (sem_t)args[1];
 144:src/riscv.cpp ****                 retVal=id->wait();
 145:src/riscv.cpp **** 
 146:src/riscv.cpp ****                 break;
 147:src/riscv.cpp ****             case SEM_SIGNAL:
 148:src/riscv.cpp ****                 id = (sem_t)args[1];
 149:src/riscv.cpp ****                 retVal=id->signal();
 150:src/riscv.cpp ****                 break;
 151:src/riscv.cpp ****             case PUTC:
 152:src/riscv.cpp ****                  c = (char)args[1];
 153:src/riscv.cpp ****                     bufferOut->sys_put(c);
 154:src/riscv.cpp ****                 break;
 155:src/riscv.cpp ****             case GETC:
 156:src/riscv.cpp ****                retchar = bufferIn->sys_get();
 157:src/riscv.cpp ****                 retVal=(uint64)retchar;
 158:src/riscv.cpp **** 
 159:src/riscv.cpp ****                 break;
 160:src/riscv.cpp ****             case TIME_SLEEP:
 161:src/riscv.cpp ****                 time = (time_t)args[1];
 162:src/riscv.cpp ****                     retVal = TCB::sleep(time);
 163:src/riscv.cpp ****                 break;
 164:src/riscv.cpp ****         }
 165:src/riscv.cpp ****               retValueRISV(retVal);
 532              		.loc 1 165 15
 533              		.loc 1 165 27 is_stmt 0
 534 0200 833784F5 		ld	a5,-168(s0)
 535              	.LVL28:
 536              	.LBB63:
 537              	.LBB64:
 183:src/../h/riscv.hpp **** 
 184:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 185:src/../h/riscv.hpp **** {
 186:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 187:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 188:src/../h/riscv.hpp ****     return sstatus;
 189:src/../h/riscv.hpp **** }
 190:src/../h/riscv.hpp **** 
 191:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 192:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccnTfDU9.s 			page 18


 193:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 194:src/../h/riscv.hpp **** }
 195:src/../h/riscv.hpp **** inline void Riscv::retValueRISV(uint64 retVal)
 196:src/../h/riscv.hpp **** {
 197:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r" (retVal));
 538              		.loc 2 197 5 is_stmt 1
 539              		.loc 2 197 52 is_stmt 0
 540              	#APP
 541              	# 197 "src/../h/riscv.hpp" 1
 198              	}
 542              		mv a0, a5
 543              	# 0 "" 2
 544              	.LVL29:
 545              	#NO_APP
 546              	.LBE64:
 547              	.LBE63:
 166:src/riscv.cpp ****                w_sepc(sepc);
 548              		.loc 1 166 16 is_stmt 1
 549              	.LBB65:
 550              	.LBB66:
 125:src/../h/riscv.hpp **** }
 551              		.loc 2 125 5
 125:src/../h/riscv.hpp **** }
 552              		.loc 2 125 65 is_stmt 0
 553              	#APP
 554              	# 125 "src/../h/riscv.hpp" 1
 555              		csrw sepc, s1
 556              	# 0 "" 2
 557              	.LVL30:
 558              	#NO_APP
 559              	.L7:
 560              	.LBE66:
 561              	.LBE65:
 562              	.LBE75:
 563              	.LBE90:
 564              	.LBE104:
 565              	.LBE108:
 167:src/riscv.cpp **** 
 168:src/riscv.cpp **** 
 169:src/riscv.cpp ****     }else{
 170:src/riscv.cpp ****         uint64 sepc = r_sepc();
 171:src/riscv.cpp ****         uint64 stval = r_stval();
 172:src/riscv.cpp ****         uint64  sstatus = r_sstatus();
 173:src/riscv.cpp ****         printString("scause code: ");
 174:src/riscv.cpp ****         printInt(scause);
 175:src/riscv.cpp ****         printString("\n");
 176:src/riscv.cpp **** 
 177:src/riscv.cpp ****         printString("sepc code: ");
 178:src/riscv.cpp ****         printInt(sepc);
 179:src/riscv.cpp ****         printString("\n");
 180:src/riscv.cpp **** 
 181:src/riscv.cpp **** 
 182:src/riscv.cpp ****         printString("stval code: ");
 183:src/riscv.cpp ****         printInt(stval);
 184:src/riscv.cpp ****         printString("\n");
 185:src/riscv.cpp **** 
 186:src/riscv.cpp ****         printString("sstatus code: ");
GAS LISTING /tmp/ccnTfDU9.s 			page 19


 187:src/riscv.cpp ****         printInt(sstatus);
 188:src/riscv.cpp ****         printString("\n");
 189:src/riscv.cpp ****     }
 190:src/riscv.cpp **** 
 191:src/riscv.cpp **** 
 192:src/riscv.cpp **** 
 193:src/riscv.cpp **** 
 194:src/riscv.cpp **** 
 195:src/riscv.cpp **** }...
 566              		.loc 1 195 1
 567 020c 8330810A 		ld	ra,168(sp)
 568              		.cfi_remember_state
 569              		.cfi_restore 1
 570 0210 0334010A 		ld	s0,160(sp)
 571              		.cfi_restore 8
 572              		.cfi_def_cfa 2, 176
 573 0214 83348109 		ld	s1,152(sp)
 574              		.cfi_restore 9
 575 0218 03390109 		ld	s2,144(sp)
 576              		.cfi_restore 18
 577 021c 83398108 		ld	s3,136(sp)
 578              		.cfi_restore 19
 579 0220 033A0108 		ld	s4,128(sp)
 580              		.cfi_restore 20
 581 0224 1301010B 		addi	sp,sp,176
 582              		.cfi_def_cfa_offset 0
 583 0228 67800000 		jr	ra
 584              	.LVL31:
 585              	.L26:
 586              		.cfi_restore_state
 587              	.LBB109:
 588              	.LBB105:
 589              	.LBB91:
 590              	.LBB76:
  92:src/riscv.cpp ****             case THREAD_PREPARE:
 591              		.loc 1 92 13 is_stmt 1
  93:src/riscv.cpp ****                     handler = (thread_t*)args[1];
 592              		.loc 1 93 21
  93:src/riscv.cpp ****                     handler = (thread_t*)args[1];
 593              		.loc 1 93 48 is_stmt 0
 594 022c 033904FB 		ld	s2,-80(s0)
 595              	.LVL32:
  94:src/riscv.cpp ****                     *handler= TCB::initThreadWithNoRun((Body)args[2],(void*)args[3],(uint64*)args[4
 596              		.loc 1 94 21 is_stmt 1
  94:src/riscv.cpp ****                     *handler= TCB::initThreadWithNoRun((Body)args[2],(void*)args[3],(uint64*)args[4
 597              		.loc 1 94 55 is_stmt 0
 598 0230 033684FC 		ld	a2,-56(s0)
 599 0234 833504FC 		ld	a1,-64(s0)
 600 0238 033584FB 		ld	a0,-72(s0)
 601 023c 97000000 		call	_ZN3TCB19initThreadWithNoRunEPFvPvES0_Pm@plt
 601      E7800000 
 602              	.LVL33:
  94:src/riscv.cpp ****                     *handler= TCB::initThreadWithNoRun((Body)args[2],(void*)args[3],(uint64*)args[4
 603              		.loc 1 94 29
 604 0244 2330A900 		sd	a0,0(s2)
  96:src/riscv.cpp ****                     break;
 605              		.loc 1 96 21 is_stmt 1
GAS LISTING /tmp/ccnTfDU9.s 			page 20


 606 0248 6FF09FFB 		j	.L15
 607              	.LVL34:
 608              	.L30:
  97:src/riscv.cpp ****             case THREAD_START:
 609              		.loc 1 97 13
  98:src/riscv.cpp ****                 thHandl=(thread_t)args[1];
 610              		.loc 1 98 17
  98:src/riscv.cpp ****                 thHandl=(thread_t)args[1];
 611              		.loc 1 98 41 is_stmt 0
 612 024c 833704FB 		ld	a5,-80(s0)
  98:src/riscv.cpp ****                 thHandl=(thread_t)args[1];
 613              		.loc 1 98 24
 614 0250 2334F4F6 		sd	a5,-152(s0)
  99:src/riscv.cpp ****                 retVal= thHandl->start();
 615              		.loc 1 99 17 is_stmt 1
  99:src/riscv.cpp ****                 retVal= thHandl->start();
 616              		.loc 1 99 39 is_stmt 0
 617 0254 033584F6 		ld	a0,-152(s0)
 618 0258 97000000 		call	_ZN3TCB5startEv@plt
 618      E7800000 
 619              	.LVL35:
  99:src/riscv.cpp ****                 retVal= thHandl->start();
 620              		.loc 1 99 23
 621 0260 233CA4F4 		sd	a0,-168(s0)
 100:src/riscv.cpp ****                 break;
 622              		.loc 1 100 17 is_stmt 1
 623 0264 6FF0DFF9 		j	.L15
 624              	.L28:
 101:src/riscv.cpp ****             case THREAD_EXIT:
 625              		.loc 1 101 13
 102:src/riscv.cpp ****                 retVal=TCB::exit();
 626              		.loc 1 102 17
 102:src/riscv.cpp ****                 retVal=TCB::exit();
 627              		.loc 1 102 33 is_stmt 0
 628 0268 97000000 		call	_ZN3TCB4exitEv@plt
 628      E7800000 
 629              	.LVL36:
 102:src/riscv.cpp ****                 retVal=TCB::exit();
 630              		.loc 1 102 23
 631 0270 233CA4F4 		sd	a0,-168(s0)
 104:src/riscv.cpp ****                 break;
 632              		.loc 1 104 17 is_stmt 1
 633 0274 6FF0DFF8 		j	.L15
 634              	.L27:
 105:src/riscv.cpp ****             case THREAD_DISPATCH:
 635              		.loc 1 105 13
 106:src/riscv.cpp ****                 TCB::dispatch();
 636              		.loc 1 106 17
 106:src/riscv.cpp ****                 TCB::dispatch();
 637              		.loc 1 106 30 is_stmt 0
 638 0278 97000000 		call	_ZN3TCB8dispatchEv@plt
 638      E7800000 
 639              	.LVL37:
 640 0280 6FF01FF8 		j	.L15
 641              	.L25:
 108:src/riscv.cpp ****             case THREAD_DELETE:
 642              		.loc 1 108 13 is_stmt 1
GAS LISTING /tmp/ccnTfDU9.s 			page 21


 109:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
 643              		.loc 1 109 17
 109:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
 644              		.loc 1 109 43 is_stmt 0
 645 0284 833704FB 		ld	a5,-80(s0)
 109:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
 646              		.loc 1 109 25
 647 0288 2334F4F6 		sd	a5,-152(s0)
 648              	.L34:
 110:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 649              		.loc 1 110 17 is_stmt 1
 110:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 650              		.loc 1 110 23
 110:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 651              		.loc 1 110 24 is_stmt 0
 652 028c 833784F6 		ld	a5,-152(s0)
 653              	.LVL38:
 654              	.LBB67:
 655              	.LBB68:
 656              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 7/30/22.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OSPROJECT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OSPROJECT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "../lib/mem.h"
  11:src/../h/tcb.hpp **** class TCB{
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** public:
  14:src/../h/tcb.hpp ****     ~TCB(){delete[] stack;}
  15:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  16:src/../h/tcb.hpp ****     static TCB *initThreadWithRun(Body body,void *arg,uint64*stack);
  17:src/../h/tcb.hpp ****     static TCB *initThreadWithNoRun(Body body , void*arg,uint64*stack);
  18:src/../h/tcb.hpp ****     static TCB* running;
  19:src/../h/tcb.hpp ****     static TCB* idle;
  20:src/../h/tcb.hpp ****     static TCB * kernel;
  21:src/../h/tcb.hpp ****     static TCB * outputTh;
  22:src/../h/tcb.hpp **** 
  23:src/../h/tcb.hpp ****     bool isFinished(){
  24:src/../h/tcb.hpp ****         return status.getFinished();
  25:src/../h/tcb.hpp ****     }
  26:src/../h/tcb.hpp ****     uint64 getTimeSlice(){return timeSlice;}
  27:src/../h/tcb.hpp ****     static TCB* getIdle();
  28:src/../h/tcb.hpp ****     static TCB* getKernel();
  29:src/../h/tcb.hpp ****     static TCB* getOutputTh();
  30:src/../h/tcb.hpp ****     int start();
  31:src/../h/tcb.hpp ****     void *operator new(size_t size) { return __mem_alloc(size); }
  32:src/../h/tcb.hpp ****     void operator delete(void *ptr) { __mem_free(ptr); }
  33:src/../h/tcb.hpp **** private:
  34:src/../h/tcb.hpp ****     static int idS;
  35:src/../h/tcb.hpp ****     int myId;
  36:src/../h/tcb.hpp ****     explicit TCB(Body body,void *arg, uint64 *stack):
  37:src/../h/tcb.hpp ****     body(body),
GAS LISTING /tmp/ccnTfDU9.s 			page 22


  38:src/../h/tcb.hpp ****     stack(stack),
  39:src/../h/tcb.hpp ****     arg(arg),
  40:src/../h/tcb.hpp ****     timeSlice(DEFAULT_TIME_SLICE)
  41:src/../h/tcb.hpp ****     {
  42:src/../h/tcb.hpp ****         myId=idS++;
  43:src/../h/tcb.hpp ****         status.setCreated();
  44:src/../h/tcb.hpp ****         context={(uint64) &threadWrapper,
  45:src/../h/tcb.hpp ****                  (uint64) &stack[DEFAULT_STACK_SIZE]};
  46:src/../h/tcb.hpp ****     }
  47:src/../h/tcb.hpp **** 
  48:src/../h/tcb.hpp ****     explicit TCB(){
  49:src/../h/tcb.hpp ****         body= nullptr;
  50:src/../h/tcb.hpp ****         stack= nullptr;
  51:src/../h/tcb.hpp ****         arg= nullptr;
  52:src/../h/tcb.hpp ****         myId=idS++;
  53:src/../h/tcb.hpp ****         timeSlice=DEFAULT_TIME_SLICE;
  54:src/../h/tcb.hpp ****         context = {0, 0};
  55:src/../h/tcb.hpp ****         status.delAll();
  56:src/../h/tcb.hpp ****         status.setRunning();
  57:src/../h/tcb.hpp ****     }
  58:src/../h/tcb.hpp **** 
  59:src/../h/tcb.hpp ****     struct Context
  60:src/../h/tcb.hpp ****     {
  61:src/../h/tcb.hpp ****         uint64 ra;
  62:src/../h/tcb.hpp ****         uint64 sp;
  63:src/../h/tcb.hpp ****     };
  64:src/../h/tcb.hpp ****     struct Status{
  65:src/../h/tcb.hpp ****         bool FINISHED= false;
  66:src/../h/tcb.hpp ****         bool RUNNING = false;
  67:src/../h/tcb.hpp ****         bool READY= false;
  68:src/../h/tcb.hpp ****         bool CREATED= false;
  69:src/../h/tcb.hpp ****         bool WAITING= false;
  70:src/../h/tcb.hpp ****         bool SLEEPING= false;
  71:src/../h/tcb.hpp ****         bool IDLE= false;
  72:src/../h/tcb.hpp ****         bool SYSTEMATIC= false;
  73:src/../h/tcb.hpp ****     public:
  74:src/../h/tcb.hpp ****         void* operator new(size_t size){return __mem_alloc(size);}
  75:src/../h/tcb.hpp ****         void operator delete (void* ptr){ __mem_free(ptr);}
  76:src/../h/tcb.hpp ****         void setFinished(){FINISHED=true;}
  77:src/../h/tcb.hpp ****         void delFinished(){FINISHED= false;}
  78:src/../h/tcb.hpp ****         void setRunning(){RUNNING=true;}
  79:src/../h/tcb.hpp ****         void delRunning(){RUNNING= false;}
  80:src/../h/tcb.hpp ****         void setReady(){READY=true;}
  81:src/../h/tcb.hpp ****         void delReady(){READY= false;}
  82:src/../h/tcb.hpp ****         void setCreated(){CREATED=true;}
  83:src/../h/tcb.hpp ****         void delCreated(){CREATED= false;}
  84:src/../h/tcb.hpp ****         void setWaiting(){WAITING=true;}
  85:src/../h/tcb.hpp ****         void delWaiting(){WAITING= false;}
  86:src/../h/tcb.hpp ****         void setSleeping(){SLEEPING=true;}
  87:src/../h/tcb.hpp ****         void delSleeping(){SLEEPING= false;}
  88:src/../h/tcb.hpp ****         void setIdle(){IDLE=true;}
  89:src/../h/tcb.hpp ****         void delIdle(){IDLE= false;}
  90:src/../h/tcb.hpp ****         bool getFinished(){ return FINISHED;}
 657              		.loc 3 90 29 is_stmt 1
 658              		.loc 3 90 36 is_stmt 0
 659 0290 83C78702 		lbu	a5,40(a5)
 660              	.LVL39:
GAS LISTING /tmp/ccnTfDU9.s 			page 23


 661              	.LBE68:
 662              	.LBE67:
 110:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 663              		.loc 1 110 23
 664 0294 63980700 		bnez	a5,.L33
 111:src/riscv.cpp ****                     TCB::dispatch();
 665              		.loc 1 111 21 is_stmt 1
 111:src/riscv.cpp ****                     TCB::dispatch();
 666              		.loc 1 111 34 is_stmt 0
 667 0298 97000000 		call	_ZN3TCB8dispatchEv@plt
 667      E7800000 
 668              	.LVL40:
 669 02a0 6FF0DFFE 		j	.L34
 670              	.L33:
 114:src/riscv.cpp ****                 delete thHandl;
 671              		.loc 1 114 17 is_stmt 1
 114:src/riscv.cpp ****                 delete thHandl;
 672              		.loc 1 114 24 is_stmt 0
 673 02a4 033984F6 		ld	s2,-152(s0)
 114:src/riscv.cpp ****                 delete thHandl;
 674              		.loc 1 114 31
 675 02a8 63000902 		beqz	s2,.L24
 676              	.LVL41:
 677              	.LBB69:
 678              	.LBB70:
  14:src/../h/tcb.hpp ****     using Body = void (*)(void*);
 679              		.loc 3 14 12 is_stmt 1
  14:src/../h/tcb.hpp ****     using Body = void (*)(void*);
 680              		.loc 3 14 21 is_stmt 0
 681 02ac 03350901 		ld	a0,16(s2)
  14:src/../h/tcb.hpp ****     using Body = void (*)(void*);
 682              		.loc 3 14 26
 683 02b0 63060500 		beqz	a0,.L35
  14:src/../h/tcb.hpp ****     using Body = void (*)(void*);
 684              		.loc 3 14 21
 685 02b4 97000000 		call	_ZdaPv@plt
 685      E7800000 
 686              	.LVL42:
 687              	.L35:
 688              	.LBE70:
 689              	.LBE69:
 690              	.LBB71:
 691              	.LBB72:
  32:src/../h/tcb.hpp **** private:
 692              		.loc 3 32 39 is_stmt 1
  32:src/../h/tcb.hpp **** private:
 693              		.loc 3 32 49 is_stmt 0
 694 02bc 13050900 		mv	a0,s2
 695 02c0 97000000 		call	__mem_free@plt
 695      E7800000 
 696              	.LVL43:
 697              	.L24:
 698              	.LBE72:
 699              	.LBE71:
 115:src/riscv.cpp ****             case THREAD_JOIN:
 700              		.loc 1 115 13 is_stmt 1
 116:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
GAS LISTING /tmp/ccnTfDU9.s 			page 24


 701              		.loc 1 116 17
 116:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
 702              		.loc 1 116 43 is_stmt 0
 703 02c8 833704FB 		ld	a5,-80(s0)
 116:src/riscv.cpp ****                 thHandl = (thread_t)args[1];
 704              		.loc 1 116 25
 705 02cc 2334F4F6 		sd	a5,-152(s0)
 706              	.L36:
 117:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 707              		.loc 1 117 17 is_stmt 1
 117:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 708              		.loc 1 117 23
 117:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 709              		.loc 1 117 24 is_stmt 0
 710 02d0 833784F6 		ld	a5,-152(s0)
 711              	.LVL44:
 712              	.LBB73:
 713              	.LBB74:
 714              		.loc 3 90 29 is_stmt 1
 715              		.loc 3 90 36 is_stmt 0
 716 02d4 83C78702 		lbu	a5,40(a5)
 717              	.LVL45:
 718              	.LBE74:
 719              	.LBE73:
 117:src/riscv.cpp ****                 while(!thHandl->status.getFinished()){
 720              		.loc 1 117 23
 721 02d8 E39407F2 		bnez	a5,.L15
 118:src/riscv.cpp ****                     TCB::dispatch();
 722              		.loc 1 118 21 is_stmt 1
 118:src/riscv.cpp ****                     TCB::dispatch();
 723              		.loc 1 118 34 is_stmt 0
 724 02dc 97000000 		call	_ZN3TCB8dispatchEv@plt
 724      E7800000 
 725              	.LVL46:
 726 02e4 6FF0DFFE 		j	.L36
 727              	.L31:
 122:src/riscv.cpp ****             case MEM_FREE:
 728              		.loc 1 122 13 is_stmt 1
 123:src/riscv.cpp ****                     pointerForDealoc = (void*)args[1];
 729              		.loc 1 123 21
 730              	.LVL47:
 124:src/riscv.cpp ****                     retVal=(uint64)__mem_free(pointerForDealoc);
 731              		.loc 1 124 21
 124:src/riscv.cpp ****                     retVal=(uint64)__mem_free(pointerForDealoc);
 732              		.loc 1 124 46 is_stmt 0
 733 02e8 033504FB 		ld	a0,-80(s0)
 734 02ec 97000000 		call	__mem_free@plt
 734      E7800000 
 735              	.LVL48:
 124:src/riscv.cpp ****                     retVal=(uint64)__mem_free(pointerForDealoc);
 736              		.loc 1 124 27
 737 02f4 233CA4F4 		sd	a0,-168(s0)
 125:src/riscv.cpp ****                 break;
 738              		.loc 1 125 17 is_stmt 1
 739 02f8 6FF09FF0 		j	.L15
 740              	.LVL49:
 741              	.L32:
GAS LISTING /tmp/ccnTfDU9.s 			page 25


 126:src/riscv.cpp ****             case MEM_ALLOC:
 742              		.loc 1 126 13
 127:src/riscv.cpp ****                     size = args[1]*MEM_BLOCK_SIZE;
 743              		.loc 1 127 21
 127:src/riscv.cpp ****                     size = args[1]*MEM_BLOCK_SIZE;
 744              		.loc 1 127 34 is_stmt 0
 745 02fc 833704FB 		ld	a5,-80(s0)
 127:src/riscv.cpp ****                     size = args[1]*MEM_BLOCK_SIZE;
 746              		.loc 1 127 35
 747 0300 93976700 		slli	a5,a5,6
 127:src/riscv.cpp ****                     size = args[1]*MEM_BLOCK_SIZE;
 748              		.loc 1 127 26
 749 0304 2338F4F6 		sd	a5,-144(s0)
 128:src/riscv.cpp ****                     retVal = (uint64) __mem_alloc(size);
 750              		.loc 1 128 21 is_stmt 1
 128:src/riscv.cpp ****                     retVal = (uint64) __mem_alloc(size);
 751              		.loc 1 128 50 is_stmt 0
 752 0308 033504F7 		ld	a0,-144(s0)
 753 030c 97000000 		call	__mem_alloc@plt
 753      E7800000 
 754              	.LVL50:
 128:src/riscv.cpp ****                     retVal = (uint64) __mem_alloc(size);
 755              		.loc 1 128 28
 756 0314 233CA4F4 		sd	a0,-168(s0)
 129:src/riscv.cpp ****                 break;
 757              		.loc 1 129 17 is_stmt 1
 758 0318 6FF09FEE 		j	.L15
 759              	.L23:
 130:src/riscv.cpp ****             case SEM_OPEN:
 760              		.loc 1 130 13
 131:src/riscv.cpp ****                 handleSem = (sem_t*)args[3];
 761              		.loc 1 131 17
 131:src/riscv.cpp ****                 handleSem = (sem_t*)args[3];
 762              		.loc 1 131 43 is_stmt 0
 763 031c 833904FC 		ld	s3,-64(s0)
 764              	.LVL51:
 132:src/riscv.cpp ****                 init = (unsigned)args[2];
 765              		.loc 1 132 17 is_stmt 1
 132:src/riscv.cpp ****                 init = (unsigned)args[2];
 766              		.loc 1 132 22 is_stmt 0
 767 0320 032A84FB 		lw	s4,-72(s0)
 768              	.LVL52:
 133:src/riscv.cpp ****                 new _sem(handleSem,init);
 769              		.loc 1 133 17 is_stmt 1
 133:src/riscv.cpp ****                 new _sem(handleSem,init);
 770              		.loc 1 133 40 is_stmt 0
 771 0324 13058002 		li	a0,40
 772 0328 97000000 		call	_ZN4_semnwEm@plt
 772      E7800000 
 773              	.LVL53:
 774              	.LEHE0:
 775 0330 13090500 		mv	s2,a0
 776 0334 13060A00 		mv	a2,s4
 777 0338 93850900 		mv	a1,s3
 778              	.LEHB1:
 779 033c 97000000 		call	_ZN4_semC1EPPS_j@plt
 779      E7800000 
GAS LISTING /tmp/ccnTfDU9.s 			page 26


 780              	.LVL54:
 781              	.LEHE1:
 134:src/riscv.cpp ****                 retVal=1;
 782              		.loc 1 134 17 is_stmt 1
 134:src/riscv.cpp ****                 retVal=1;
 783              		.loc 1 134 23 is_stmt 0
 784 0344 93071000 		li	a5,1
 785 0348 233CF4F4 		sd	a5,-168(s0)
 136:src/riscv.cpp ****                 break;
 786              		.loc 1 136 17 is_stmt 1
 787 034c 6FF05FEB 		j	.L15
 788              	.LVL55:
 789              	.L22:
 137:src/riscv.cpp ****             case SEM_CLOSE:
 790              		.loc 1 137 13
 138:src/riscv.cpp ****                 handleSemSem = (sem_t)args[1];
 791              		.loc 1 138 17
 139:src/riscv.cpp ****                 handleSemSem->close();
 792              		.loc 1 139 17
 139:src/riscv.cpp ****                 handleSemSem->close();
 793              		.loc 1 139 36 is_stmt 0
 794 0350 033504FB 		ld	a0,-80(s0)
 795              	.LEHB2:
 796 0354 97000000 		call	_ZN4_sem5closeEv@plt
 796      E7800000 
 797              	.LVL56:
 140:src/riscv.cpp ****                 retVal=1;
 798              		.loc 1 140 17 is_stmt 1
 140:src/riscv.cpp ****                 retVal=1;
 799              		.loc 1 140 23 is_stmt 0
 800 035c 93071000 		li	a5,1
 801 0360 233CF4F4 		sd	a5,-168(s0)
 141:src/riscv.cpp ****                 break;
 802              		.loc 1 141 17 is_stmt 1
 803 0364 6FF0DFE9 		j	.L15
 804              	.LVL57:
 805              	.L21:
 142:src/riscv.cpp ****             case SEM_WAIT:
 806              		.loc 1 142 13
 143:src/riscv.cpp ****                 id = (sem_t)args[1];
 807              		.loc 1 143 17
 143:src/riscv.cpp ****                 id = (sem_t)args[1];
 808              		.loc 1 143 35 is_stmt 0
 809 0368 833704FB 		ld	a5,-80(s0)
 143:src/riscv.cpp ****                 id = (sem_t)args[1];
 810              		.loc 1 143 20
 811 036c 2330F4F6 		sd	a5,-160(s0)
 144:src/riscv.cpp ****                 retVal=id->wait();
 812              		.loc 1 144 17 is_stmt 1
 144:src/riscv.cpp ****                 retVal=id->wait();
 813              		.loc 1 144 32 is_stmt 0
 814 0370 033504F6 		ld	a0,-160(s0)
 815 0374 97000000 		call	_ZN4_sem4waitEv@plt
 815      E7800000 
 816              	.LVL58:
 144:src/riscv.cpp ****                 retVal=id->wait();
 817              		.loc 1 144 23
GAS LISTING /tmp/ccnTfDU9.s 			page 27


 818 037c 233CA4F4 		sd	a0,-168(s0)
 146:src/riscv.cpp ****                 break;
 819              		.loc 1 146 17 is_stmt 1
 820 0380 6FF01FE8 		j	.L15
 821              	.L20:
 147:src/riscv.cpp ****             case SEM_SIGNAL:
 822              		.loc 1 147 13
 148:src/riscv.cpp ****                 id = (sem_t)args[1];
 823              		.loc 1 148 17
 148:src/riscv.cpp ****                 id = (sem_t)args[1];
 824              		.loc 1 148 35 is_stmt 0
 825 0384 833704FB 		ld	a5,-80(s0)
 148:src/riscv.cpp ****                 id = (sem_t)args[1];
 826              		.loc 1 148 20
 827 0388 2330F4F6 		sd	a5,-160(s0)
 149:src/riscv.cpp ****                 retVal=id->signal();
 828              		.loc 1 149 17 is_stmt 1
 149:src/riscv.cpp ****                 retVal=id->signal();
 829              		.loc 1 149 34 is_stmt 0
 830 038c 033504F6 		ld	a0,-160(s0)
 831 0390 97000000 		call	_ZN4_sem6signalEv@plt
 831      E7800000 
 832              	.LVL59:
 149:src/riscv.cpp ****                 retVal=id->signal();
 833              		.loc 1 149 23
 834 0398 233CA4F4 		sd	a0,-168(s0)
 150:src/riscv.cpp ****                 break;
 835              		.loc 1 150 17 is_stmt 1
 836 039c 6FF05FE6 		j	.L15
 837              	.L16:
 151:src/riscv.cpp ****             case PUTC:
 838              		.loc 1 151 13
 152:src/riscv.cpp ****                  c = (char)args[1];
 839              		.loc 1 152 18
 840              	.LVL60:
 153:src/riscv.cpp ****                     bufferOut->sys_put(c);
 841              		.loc 1 153 21
 153:src/riscv.cpp ****                     bufferOut->sys_put(c);
 842              		.loc 1 153 39 is_stmt 0
 843 03a0 834504FB 		lbu	a1,-80(s0)
 844 03a4 17050000 		ld	a0,.LANCHOR0+16
 844      03350500 
 845 03ac 97000000 		call	_ZN7_Buffer7sys_putEc@plt
 845      E7800000 
 846              	.LVL61:
 847 03b4 6FF0DFE4 		j	.L15
 848              	.LVL62:
 849              	.L18:
 155:src/riscv.cpp ****             case GETC:
 850              		.loc 1 155 13 is_stmt 1
 156:src/riscv.cpp ****                retchar = bufferIn->sys_get();
 851              		.loc 1 156 16
 156:src/riscv.cpp ****                retchar = bufferIn->sys_get();
 852              		.loc 1 156 43 is_stmt 0
 853 03b8 17050000 		ld	a0,.LANCHOR0+8
 853      03350500 
 854 03c0 97000000 		call	_ZN7_Buffer7sys_getEv@plt
GAS LISTING /tmp/ccnTfDU9.s 			page 28


 854      E7800000 
 855              	.LVL63:
 157:src/riscv.cpp ****                 retVal=(uint64)retchar;
 856              		.loc 1 157 17 is_stmt 1
 157:src/riscv.cpp ****                 retVal=(uint64)retchar;
 857              		.loc 1 157 23 is_stmt 0
 858 03c8 233CA4F4 		sd	a0,-168(s0)
 159:src/riscv.cpp ****                 break;
 859              		.loc 1 159 17 is_stmt 1
 860 03cc 6FF05FE3 		j	.L15
 861              	.LVL64:
 862              	.L19:
 160:src/riscv.cpp ****             case TIME_SLEEP:
 863              		.loc 1 160 13
 161:src/riscv.cpp ****                 time = (time_t)args[1];
 864              		.loc 1 161 17
 162:src/riscv.cpp ****                     retVal = TCB::sleep(time);
 865              		.loc 1 162 21
 162:src/riscv.cpp ****                     retVal = TCB::sleep(time);
 866              		.loc 1 162 40 is_stmt 0
 867 03d0 033504FB 		ld	a0,-80(s0)
 868 03d4 97000000 		call	_ZN3TCB5sleepEm@plt
 868      E7800000 
 869              	.LVL65:
 162:src/riscv.cpp ****                     retVal = TCB::sleep(time);
 870              		.loc 1 162 28
 871 03dc 233CA4F4 		sd	a0,-168(s0)
 163:src/riscv.cpp ****                 break;
 872              		.loc 1 163 17 is_stmt 1
 873 03e0 6FF01FE2 		j	.L15
 874              	.LVL66:
 875              	.L14:
 876              	.LBE76:
 877              	.LBB77:
 170:src/riscv.cpp ****         uint64 sepc = r_sepc();
 878              		.loc 1 170 9
 879              	.LBB78:
 880              	.LBB79:
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 881              		.loc 2 118 5
 119:src/../h/riscv.hpp ****     return sepc;
 882              		.loc 2 119 5
 119:src/../h/riscv.hpp ****     return sepc;
 883              		.loc 2 119 64 is_stmt 0
 884              	#APP
 885              	# 119 "src/../h/riscv.hpp" 1
 886              		csrr a5, sepc
 887              	# 0 "" 2
 888              	#NO_APP
 889 03e8 2330F4FA 		sd	a5,-96(s0)
 120:src/../h/riscv.hpp **** }
 890              		.loc 2 120 5 is_stmt 1
 120:src/../h/riscv.hpp **** }
 891              		.loc 2 120 12 is_stmt 0
 892 03ec 033A04FA 		ld	s4,-96(s0)
 893              	.LVL67:
 894              	.LBE79:
GAS LISTING /tmp/ccnTfDU9.s 			page 29


 895              	.LBE78:
 171:src/riscv.cpp ****         uint64 stval = r_stval();
 896              		.loc 1 171 9 is_stmt 1
 897              	.LBB80:
 898              	.LBB81:
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 899              		.loc 2 142 5
 143:src/../h/riscv.hpp ****     return stval;
 900              		.loc 2 143 5
 143:src/../h/riscv.hpp ****     return stval;
 901              		.loc 2 143 68 is_stmt 0
 902              	#APP
 903              	# 143 "src/../h/riscv.hpp" 1
 904              		csrr a5, stval
 905              	# 0 "" 2
 906              	#NO_APP
 907 03f4 233CF4F8 		sd	a5,-104(s0)
 144:src/../h/riscv.hpp **** }
 908              		.loc 2 144 5 is_stmt 1
 144:src/../h/riscv.hpp **** }
 909              		.loc 2 144 12 is_stmt 0
 910 03f8 833984F9 		ld	s3,-104(s0)
 911              	.LVL68:
 912              	.LBE81:
 913              	.LBE80:
 172:src/riscv.cpp ****         uint64  sstatus = r_sstatus();
 914              		.loc 1 172 9 is_stmt 1
 915              	.LBB82:
 916              	.LBB83:
 186:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 917              		.loc 2 186 5
 187:src/../h/riscv.hpp ****     return sstatus;
 918              		.loc 2 187 5
 187:src/../h/riscv.hpp ****     return sstatus;
 919              		.loc 2 187 76 is_stmt 0
 920              	#APP
 921              	# 187 "src/../h/riscv.hpp" 1
 922              		csrr a5, sstatus
 923              	# 0 "" 2
 924              	#NO_APP
 925 0400 2338F4F8 		sd	a5,-112(s0)
 188:src/../h/riscv.hpp **** }
 926              		.loc 2 188 5 is_stmt 1
 188:src/../h/riscv.hpp **** }
 927              		.loc 2 188 12 is_stmt 0
 928 0404 033904F9 		ld	s2,-112(s0)
 929              	.LVL69:
 930              	.LBE83:
 931              	.LBE82:
 173:src/riscv.cpp ****         printString("scause code: ");
 932              		.loc 1 173 9 is_stmt 1
 173:src/riscv.cpp ****         printString("scause code: ");
 933              		.loc 1 173 20 is_stmt 0
 934 0408 17050000 		lla	a0,.LC0
 934      13050500 
 935 0410 97000000 		call	_Z11printStringPKc@plt
 935      E7800000 
GAS LISTING /tmp/ccnTfDU9.s 			page 30


 936              	.LVL70:
 174:src/riscv.cpp ****         printInt(scause);
 937              		.loc 1 174 9 is_stmt 1
 174:src/riscv.cpp ****         printInt(scause);
 938              		.loc 1 174 17 is_stmt 0
 939 0418 13060000 		li	a2,0
 940 041c 9305A000 		li	a1,10
 941 0420 1B850400 		sext.w	a0,s1
 942 0424 97000000 		call	_Z8printIntiii@plt
 942      E7800000 
 943              	.LVL71:
 175:src/riscv.cpp ****         printString("\n");
 944              		.loc 1 175 9 is_stmt 1
 175:src/riscv.cpp ****         printString("\n");
 945              		.loc 1 175 20 is_stmt 0
 946 042c 17050000 		lla	a0,.LC1
 946      13050500 
 947 0434 97000000 		call	_Z11printStringPKc@plt
 947      E7800000 
 948              	.LVL72:
 177:src/riscv.cpp ****         printString("sepc code: ");
 949              		.loc 1 177 9 is_stmt 1
 177:src/riscv.cpp ****         printString("sepc code: ");
 950              		.loc 1 177 20 is_stmt 0
 951 043c 17050000 		lla	a0,.LC2
 951      13050500 
 952 0444 97000000 		call	_Z11printStringPKc@plt
 952      E7800000 
 953              	.LVL73:
 178:src/riscv.cpp ****         printInt(sepc);
 954              		.loc 1 178 9 is_stmt 1
 178:src/riscv.cpp ****         printInt(sepc);
 955              		.loc 1 178 17 is_stmt 0
 956 044c 13060000 		li	a2,0
 957 0450 9305A000 		li	a1,10
 958 0454 1B050A00 		sext.w	a0,s4
 959 0458 97000000 		call	_Z8printIntiii@plt
 959      E7800000 
 960              	.LVL74:
 179:src/riscv.cpp ****         printString("\n");
 961              		.loc 1 179 9 is_stmt 1
 179:src/riscv.cpp ****         printString("\n");
 962              		.loc 1 179 20 is_stmt 0
 963 0460 17050000 		lla	a0,.LC1
 963      13050500 
 964 0468 97000000 		call	_Z11printStringPKc@plt
 964      E7800000 
 965              	.LVL75:
 182:src/riscv.cpp ****         printString("stval code: ");
 966              		.loc 1 182 9 is_stmt 1
 182:src/riscv.cpp ****         printString("stval code: ");
 967              		.loc 1 182 20 is_stmt 0
 968 0470 17050000 		lla	a0,.LC3
 968      13050500 
 969 0478 97000000 		call	_Z11printStringPKc@plt
 969      E7800000 
 970              	.LVL76:
GAS LISTING /tmp/ccnTfDU9.s 			page 31


 183:src/riscv.cpp ****         printInt(stval);
 971              		.loc 1 183 9 is_stmt 1
 183:src/riscv.cpp ****         printInt(stval);
 972              		.loc 1 183 17 is_stmt 0
 973 0480 13060000 		li	a2,0
 974 0484 9305A000 		li	a1,10
 975 0488 1B850900 		sext.w	a0,s3
 976 048c 97000000 		call	_Z8printIntiii@plt
 976      E7800000 
 977              	.LVL77:
 184:src/riscv.cpp ****         printString("\n");
 978              		.loc 1 184 9 is_stmt 1
 184:src/riscv.cpp ****         printString("\n");
 979              		.loc 1 184 20 is_stmt 0
 980 0494 17050000 		lla	a0,.LC1
 980      13050500 
 981 049c 97000000 		call	_Z11printStringPKc@plt
 981      E7800000 
 982              	.LVL78:
 186:src/riscv.cpp ****         printString("sstatus code: ");
 983              		.loc 1 186 9 is_stmt 1
 186:src/riscv.cpp ****         printString("sstatus code: ");
 984              		.loc 1 186 20 is_stmt 0
 985 04a4 17050000 		lla	a0,.LC4
 985      13050500 
 986 04ac 97000000 		call	_Z11printStringPKc@plt
 986      E7800000 
 987              	.LVL79:
 187:src/riscv.cpp ****         printInt(sstatus);
 988              		.loc 1 187 9 is_stmt 1
 187:src/riscv.cpp ****         printInt(sstatus);
 989              		.loc 1 187 17 is_stmt 0
 990 04b4 13060000 		li	a2,0
 991 04b8 9305A000 		li	a1,10
 992 04bc 1B050900 		sext.w	a0,s2
 993 04c0 97000000 		call	_Z8printIntiii@plt
 993      E7800000 
 994              	.LVL80:
 188:src/riscv.cpp ****         printString("\n");
 995              		.loc 1 188 9 is_stmt 1
 188:src/riscv.cpp ****         printString("\n");
 996              		.loc 1 188 20 is_stmt 0
 997 04c8 17050000 		lla	a0,.LC1
 997      13050500 
 998 04d0 97000000 		call	_Z11printStringPKc@plt
 998      E7800000 
 999              	.LVL81:
 1000              	.LEHE2:
 1001              	.LBE77:
 1002              	.LBE91:
 1003              	.LBE105:
 1004              	.LBE109:
 1005              		.loc 1 195 1
 1006 04d8 6FF05FD3 		j	.L7
 1007              	.LVL82:
 1008              	.L38:
 1009 04dc 93040500 		mv	s1,a0
GAS LISTING /tmp/ccnTfDU9.s 			page 32


 1010              	.LVL83:
 1011              	.LBB110:
 1012              	.LBB106:
 1013              	.LBB92:
 1014              	.LBB84:
 133:src/riscv.cpp ****                 new _sem(handleSem,init);
 1015              		.loc 1 133 40
 1016 04e0 13050900 		mv	a0,s2
 1017 04e4 97000000 		call	_ZN4_semdlEPv@plt
 1017      E7800000 
 1018              	.LVL84:
 1019 04ec 13850400 		mv	a0,s1
 1020              	.LEHB3:
 1021 04f0 97000000 		call	_Unwind_Resume@plt
 1021      E7800000 
 1022              	.LVL85:
 1023              	.LEHE3:
 1024              	.LBE84:
 1025              	.LBE92:
 1026              	.LBE106:
 1027              	.LBE110:
 1028              		.cfi_endproc
 1029              	.LFE106:
 1030              		.globl	__gxx_personality_v0
 1031              		.section	.gcc_except_table,"a",@progbits
 1032              	.LLSDA106:
 1033 0000 FF       		.byte	0xff
 1034 0001 FF       		.byte	0xff
 1035 0002 03       		.byte	0x3
 1036 0003 34       		.byte	0x34
 1037 0004 00000000 		.4byte	.LEHB0-.LFB106
 1038 0008 00000000 		.4byte	.LEHE0-.LEHB0
 1039 000c 00000000 		.4byte	0
 1040 0010 00       		.byte	0
 1041 0011 00000000 		.4byte	.LEHB1-.LFB106
 1042 0015 00000000 		.4byte	.LEHE1-.LEHB1
 1043 0019 00000000 		.4byte	.L38-.LFB106
 1044 001d 00       		.byte	0
 1045 001e 00000000 		.4byte	.LEHB2-.LFB106
 1046 0022 00000000 		.4byte	.LEHE2-.LEHB2
 1047 0026 00000000 		.4byte	0
 1048 002a 00       		.byte	0
 1049 002b 00000000 		.4byte	.LEHB3-.LFB106
 1050 002f 00000000 		.4byte	.LEHE3-.LEHB3
 1051 0033 00000000 		.4byte	0
 1052 0037 00       		.byte	0
 1053              		.text
 1055              		.globl	_ZN5Riscv8timelistE
 1056              		.globl	_ZN5Riscv9bufferOutE
 1057              		.globl	_ZN5Riscv8bufferInE
 1058              		.bss
 1059              		.align	3
 1060              		.set	.LANCHOR0,. + 0
 1063              	_ZN5Riscv8timelistE:
 1064 0000 00000000 		.zero	8
 1064      00000000 
 1067              	_ZN5Riscv8bufferInE:
GAS LISTING /tmp/ccnTfDU9.s 			page 33


 1068 0008 00000000 		.zero	8
 1068      00000000 
 1071              	_ZN5Riscv9bufferOutE:
 1072 0010 00000000 		.zero	8
 1072      00000000 
 1073              		.text
 1074              	.Letext0:
 1075              		.file 4 "src/../h/../lib/hw.h"
 1076              		.file 5 "src/../h/syscall_c.hpp"
 1077              		.file 6 "src/../h/_sem.hpp"
 1078              		.file 7 "src/../h/list.hpp"
 1079              		.file 8 "src/../h/MyWaitList.hpp"
 1080              		.file 9 "src/../h/Buffer.hpp"
 1081              		.file 10 "src/../h/TimeList.hpp"
 1082              		.file 11 "src/../h/globals.hpp"
 1083              		.file 12 "src/../h/../lib/mem.h"
 1084              		.file 13 "src/../test/printing.hpp"
 7104              		.align	3
 7107              	DW.ref.__gxx_personality_v0:
 7108 0000 00000000 		.dword	__gxx_personality_v0
 7108      00000000 
 7109              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 7110              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccnTfDU9.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccnTfDU9.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccnTfDU9.s:13     .text:0000000000000000 .L0 
     /tmp/ccnTfDU9.s:14     .text:0000000000000000 .L0 
     /tmp/ccnTfDU9.s:15     .text:0000000000000004 .L0 
     /tmp/ccnTfDU9.s:17     .text:0000000000000008 .L0 
     /tmp/ccnTfDU9.s:19     .text:000000000000000c .L0 
     /tmp/ccnTfDU9.s:25     .text:000000000000000c .L0 
     /tmp/ccnTfDU9.s:26     .text:000000000000000c .L0 
     /tmp/ccnTfDU9.s:27     .text:000000000000000c .L0 
     /tmp/ccnTfDU9.s:37     .text:0000000000000014 .L0 
       src/riscv.cpp:18     .text:0000000000000014 .L0 
     /tmp/ccnTfDU9.s:43     .text:0000000000000018 .L0 
       src/riscv.cpp:19     .text:0000000000000018 .L0 
     /tmp/ccnTfDU9.s:49     .text:000000000000001c .L0 
     /tmp/ccnTfDU9.s:50     .text:0000000000000020 .L0 
     /tmp/ccnTfDU9.s:51     .text:0000000000000020 .L0 
     /tmp/ccnTfDU9.s:53     .text:0000000000000024 .L0 
     /tmp/ccnTfDU9.s:55     .text:0000000000000028 .L0 
     /tmp/ccnTfDU9.s:61     .text:0000000000000028 _ZN5Riscv9Rest_PrivEb
     /tmp/ccnTfDU9.s:64     .text:0000000000000028 .L0 
     /tmp/ccnTfDU9.s:66     .text:0000000000000028 .L0 
     /tmp/ccnTfDU9.s:67     .text:000000000000002c .L0 
     /tmp/ccnTfDU9.s:69     .text:0000000000000030 .L0 
     /tmp/ccnTfDU9.s:71     .text:0000000000000034 .L0 
     /tmp/ccnTfDU9.s:73     .text:0000000000000034 .L0 
     /tmp/ccnTfDU9.s:78     .text:0000000000000038 .L0 
     /tmp/ccnTfDU9.s:79     .text:0000000000000038 .L0 
     /tmp/ccnTfDU9.s:80     .text:0000000000000038 .L0 
     /tmp/ccnTfDU9.s:91     .text:0000000000000040 .L0 
     /tmp/ccnTfDU9.s:92     .text:0000000000000044 .L0 
     /tmp/ccnTfDU9.s:93     .text:0000000000000044 .L0 
     /tmp/ccnTfDU9.s:94     .text:0000000000000044 .L0 
     /tmp/ccnTfDU9.s:96     .text:0000000000000048 .L0 
     /tmp/ccnTfDU9.s:99     .text:000000000000004c .L0 
     /tmp/ccnTfDU9.s:104    .text:000000000000004c .L0 
     /tmp/ccnTfDU9.s:105    .text:000000000000004c .L0 
     /tmp/ccnTfDU9.s:106    .text:000000000000004c .L0 
     /tmp/ccnTfDU9.s:116    .text:0000000000000054 .L0 
     /tmp/ccnTfDU9.s:117    .text:0000000000000058 .L0 
     /tmp/ccnTfDU9.s:140    .text:0000000000000058 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccnTfDU9.s:143    .text:0000000000000058 .L0 
     /tmp/ccnTfDU9.s:7107   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccnTfDU9.s:146    .text:0000000000000058 .L0 
     /tmp/ccnTfDU9.s:147    .text:000000000000005c .L0 
     /tmp/ccnTfDU9.s:154    .text:0000000000000074 .L0 
     /tmp/ccnTfDU9.s:155    .text:0000000000000074 .L0 
     /tmp/ccnTfDU9.s:156    .text:0000000000000074 .L0 
     /tmp/ccnTfDU9.s:157    .text:0000000000000074 .L0 
     /tmp/ccnTfDU9.s:158    .text:0000000000000074 .L0 
     /tmp/ccnTfDU9.s:159    .text:0000000000000074 .L0 
     /tmp/ccnTfDU9.s:161    .text:0000000000000078 .L0 
     /tmp/ccnTfDU9.s:163    .text:0000000000000078 .L0 
     /tmp/ccnTfDU9.s:164    .text:0000000000000078 .L0 
       src/riscv.cpp:32     .text:0000000000000078 .L0 
     /tmp/ccnTfDU9.s:172    .text:0000000000000080 .L0 
GAS LISTING /tmp/ccnTfDU9.s 			page 35


       src/riscv.cpp:33     .text:0000000000000080 .L0 
     /tmp/ccnTfDU9.s:180    .text:0000000000000088 .L0 
       src/riscv.cpp:34     .text:0000000000000088 .L0 
     /tmp/ccnTfDU9.s:188    .text:0000000000000090 .L0 
       src/riscv.cpp:35     .text:0000000000000090 .L0 
     /tmp/ccnTfDU9.s:196    .text:0000000000000098 .L0 
       src/riscv.cpp:36     .text:0000000000000098 .L0 
     /tmp/ccnTfDU9.s:206    .text:00000000000000a0 .L0 
     /tmp/ccnTfDU9.s:207    .text:00000000000000a0 .L0 
     /tmp/ccnTfDU9.s:208    .text:00000000000000a0 .L0 
  src/../h/riscv.hpp:107    .text:00000000000000a0 .L0 
     /tmp/ccnTfDU9.s:216    .text:00000000000000a8 .L0 
     /tmp/ccnTfDU9.s:217    .text:00000000000000a8 .L0 
     /tmp/ccnTfDU9.s:223    .text:00000000000000ac .L0 
     /tmp/ccnTfDU9.s:231    .text:00000000000000bc .L0 
     /tmp/ccnTfDU9.s:241    .text:00000000000000cc .L0 
     /tmp/ccnTfDU9.s:242    .text:00000000000000cc .L0 
     /tmp/ccnTfDU9.s:244    .text:00000000000000d0 .L0 
     /tmp/ccnTfDU9.s:250    .text:00000000000000d8 .L0 
     /tmp/ccnTfDU9.s:251    .text:00000000000000d8 .L0 
     /tmp/ccnTfDU9.s:252    .text:00000000000000d8 .L0 
  src/../h/riscv.hpp:119    .text:00000000000000d8 .L0 
     /tmp/ccnTfDU9.s:260    .text:00000000000000e0 .L0 
     /tmp/ccnTfDU9.s:261    .text:00000000000000e0 .L0 
     /tmp/ccnTfDU9.s:266    .text:00000000000000e4 .L0 
     /tmp/ccnTfDU9.s:269    .text:00000000000000e8 .L0 
     /tmp/ccnTfDU9.s:270    .text:00000000000000e8 .L0 
     /tmp/ccnTfDU9.s:272    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:273    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:274    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:275    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:276    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:277    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:278    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:279    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:280    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:281    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:282    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:283    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:284    .text:00000000000000ec .L0 
     /tmp/ccnTfDU9.s:372    .text:0000000000000114 .L0 
     /tmp/ccnTfDU9.s:373    .text:0000000000000114 .L0 
     /tmp/ccnTfDU9.s:379    .text:0000000000000128 .L0 
     /tmp/ccnTfDU9.s:380    .text:0000000000000128 .L0 
     /tmp/ccnTfDU9.s:386    .text:0000000000000138 .L0 
     /tmp/ccnTfDU9.s:387    .text:0000000000000138 .L0 
     /tmp/ccnTfDU9.s:391    .text:0000000000000148 .L0 
     /tmp/ccnTfDU9.s:393    .text:000000000000014c .L0 
     /tmp/ccnTfDU9.s:400    .text:0000000000000150 .L0 
     /tmp/ccnTfDU9.s:401    .text:0000000000000150 .L0 
     /tmp/ccnTfDU9.s:402    .text:0000000000000150 .L0 
     /tmp/ccnTfDU9.s:409    .text:0000000000000158 .L0 
     /tmp/ccnTfDU9.s:419    .text:000000000000015c .L0 
     /tmp/ccnTfDU9.s:420    .text:000000000000015c .L0 
     /tmp/ccnTfDU9.s:421    .text:000000000000015c .L0 
  src/../h/riscv.hpp:119    .text:000000000000015c .L0 
     /tmp/ccnTfDU9.s:429    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccnTfDU9.s 			page 36


     /tmp/ccnTfDU9.s:430    .text:0000000000000164 .L0 
     /tmp/ccnTfDU9.s:435    .text:0000000000000168 .L0 
     /tmp/ccnTfDU9.s:436    .text:0000000000000168 .L0 
     /tmp/ccnTfDU9.s:439    .text:0000000000000174 .L0 
     /tmp/ccnTfDU9.s:440    .text:0000000000000174 .L0 
     /tmp/ccnTfDU9.s:445    .text:000000000000017c .L0 
     /tmp/ccnTfDU9.s:446    .text:000000000000017c .L0 
  src/../h/riscv.hpp:125    .text:000000000000017c .L0 
     /tmp/ccnTfDU9.s:453    .text:0000000000000180 .L0 
     /tmp/ccnTfDU9.s:464    .text:0000000000000184 .L0 
     /tmp/ccnTfDU9.s:465    .text:0000000000000184 .L0 
     /tmp/ccnTfDU9.s:471    .text:0000000000000190 .L0 
     /tmp/ccnTfDU9.s:477    .text:0000000000000198 .L0 
     /tmp/ccnTfDU9.s:478    .text:0000000000000198 .L0 
     /tmp/ccnTfDU9.s:486    .text:00000000000001a8 .L0 
     /tmp/ccnTfDU9.s:487    .text:00000000000001a8 .L0 
     /tmp/ccnTfDU9.s:488    .text:00000000000001a8 .L0 
     /tmp/ccnTfDU9.s:492    .text:00000000000001b8 .L0 
     /tmp/ccnTfDU9.s:496    .text:00000000000001c0 .L0 
     /tmp/ccnTfDU9.s:497    .text:00000000000001c0 .L0 
     /tmp/ccnTfDU9.s:501    .text:00000000000001cc .L0 
     /tmp/ccnTfDU9.s:502    .text:00000000000001cc .L0 
     /tmp/ccnTfDU9.s:516    .text:00000000000001e4 .L0 
     /tmp/ccnTfDU9.s:517    .text:00000000000001e4 .L0 
     /tmp/ccnTfDU9.s:518    .text:00000000000001e4 .L0 
     /tmp/ccnTfDU9.s:521    .text:00000000000001e8 .L0 
     /tmp/ccnTfDU9.s:522    .text:00000000000001e8 .L0 
     /tmp/ccnTfDU9.s:528    .text:00000000000001fc .L0 
     /tmp/ccnTfDU9.s:532    .text:0000000000000200 .L0 
     /tmp/ccnTfDU9.s:533    .text:0000000000000200 .L0 
     /tmp/ccnTfDU9.s:534    .text:0000000000000200 .L0 
     /tmp/ccnTfDU9.s:539    .text:0000000000000204 .L0 
  src/../h/riscv.hpp:197    .text:0000000000000204 .L0 
     /tmp/ccnTfDU9.s:551    .text:0000000000000208 .L0 
     /tmp/ccnTfDU9.s:552    .text:0000000000000208 .L0 
  src/../h/riscv.hpp:125    .text:0000000000000208 .L0 
     /tmp/ccnTfDU9.s:567    .text:000000000000020c .L0 
     /tmp/ccnTfDU9.s:568    .text:0000000000000210 .L0 
     /tmp/ccnTfDU9.s:569    .text:0000000000000210 .L0 
     /tmp/ccnTfDU9.s:571    .text:0000000000000214 .L0 
     /tmp/ccnTfDU9.s:572    .text:0000000000000214 .L0 
     /tmp/ccnTfDU9.s:574    .text:0000000000000218 .L0 
     /tmp/ccnTfDU9.s:576    .text:000000000000021c .L0 
     /tmp/ccnTfDU9.s:578    .text:0000000000000220 .L0 
     /tmp/ccnTfDU9.s:580    .text:0000000000000224 .L0 
     /tmp/ccnTfDU9.s:582    .text:0000000000000228 .L0 
     /tmp/ccnTfDU9.s:586    .text:000000000000022c .L0 
     /tmp/ccnTfDU9.s:592    .text:000000000000022c .L0 
     /tmp/ccnTfDU9.s:593    .text:000000000000022c .L0 
     /tmp/ccnTfDU9.s:594    .text:000000000000022c .L0 
     /tmp/ccnTfDU9.s:597    .text:0000000000000230 .L0 
     /tmp/ccnTfDU9.s:598    .text:0000000000000230 .L0 
     /tmp/ccnTfDU9.s:604    .text:0000000000000244 .L0 
     /tmp/ccnTfDU9.s:606    .text:0000000000000248 .L0 
     /tmp/ccnTfDU9.s:610    .text:000000000000024c .L0 
     /tmp/ccnTfDU9.s:611    .text:000000000000024c .L0 
     /tmp/ccnTfDU9.s:612    .text:000000000000024c .L0 
GAS LISTING /tmp/ccnTfDU9.s 			page 37


     /tmp/ccnTfDU9.s:614    .text:0000000000000250 .L0 
     /tmp/ccnTfDU9.s:616    .text:0000000000000254 .L0 
     /tmp/ccnTfDU9.s:617    .text:0000000000000254 .L0 
     /tmp/ccnTfDU9.s:621    .text:0000000000000260 .L0 
     /tmp/ccnTfDU9.s:623    .text:0000000000000264 .L0 
     /tmp/ccnTfDU9.s:626    .text:0000000000000268 .L0 
     /tmp/ccnTfDU9.s:627    .text:0000000000000268 .L0 
     /tmp/ccnTfDU9.s:628    .text:0000000000000268 .L0 
     /tmp/ccnTfDU9.s:631    .text:0000000000000270 .L0 
     /tmp/ccnTfDU9.s:633    .text:0000000000000274 .L0 
     /tmp/ccnTfDU9.s:636    .text:0000000000000278 .L0 
     /tmp/ccnTfDU9.s:637    .text:0000000000000278 .L0 
     /tmp/ccnTfDU9.s:638    .text:0000000000000278 .L0 
     /tmp/ccnTfDU9.s:643    .text:0000000000000284 .L0 
     /tmp/ccnTfDU9.s:644    .text:0000000000000284 .L0 
     /tmp/ccnTfDU9.s:645    .text:0000000000000284 .L0 
     /tmp/ccnTfDU9.s:647    .text:0000000000000288 .L0 
     /tmp/ccnTfDU9.s:650    .text:000000000000028c .L0 
     /tmp/ccnTfDU9.s:651    .text:000000000000028c .L0 
     /tmp/ccnTfDU9.s:652    .text:000000000000028c .L0 
     /tmp/ccnTfDU9.s:658    .text:0000000000000290 .L0 
     /tmp/ccnTfDU9.s:659    .text:0000000000000290 .L0 
     /tmp/ccnTfDU9.s:664    .text:0000000000000294 .L0 
     /tmp/ccnTfDU9.s:666    .text:0000000000000298 .L0 
     /tmp/ccnTfDU9.s:667    .text:0000000000000298 .L0 
     /tmp/ccnTfDU9.s:672    .text:00000000000002a4 .L0 
     /tmp/ccnTfDU9.s:673    .text:00000000000002a4 .L0 
     /tmp/ccnTfDU9.s:675    .text:00000000000002a8 .L0 
     /tmp/ccnTfDU9.s:680    .text:00000000000002ac .L0 
     /tmp/ccnTfDU9.s:681    .text:00000000000002ac .L0 
     /tmp/ccnTfDU9.s:683    .text:00000000000002b0 .L0 
     /tmp/ccnTfDU9.s:685    .text:00000000000002b4 .L0 
     /tmp/ccnTfDU9.s:693    .text:00000000000002bc .L0 
     /tmp/ccnTfDU9.s:694    .text:00000000000002bc .L0 
     /tmp/ccnTfDU9.s:701    .text:00000000000002c8 .L0 
     /tmp/ccnTfDU9.s:702    .text:00000000000002c8 .L0 
     /tmp/ccnTfDU9.s:703    .text:00000000000002c8 .L0 
     /tmp/ccnTfDU9.s:705    .text:00000000000002cc .L0 
     /tmp/ccnTfDU9.s:708    .text:00000000000002d0 .L0 
     /tmp/ccnTfDU9.s:709    .text:00000000000002d0 .L0 
     /tmp/ccnTfDU9.s:710    .text:00000000000002d0 .L0 
     /tmp/ccnTfDU9.s:715    .text:00000000000002d4 .L0 
     /tmp/ccnTfDU9.s:716    .text:00000000000002d4 .L0 
     /tmp/ccnTfDU9.s:721    .text:00000000000002d8 .L0 
     /tmp/ccnTfDU9.s:723    .text:00000000000002dc .L0 
     /tmp/ccnTfDU9.s:724    .text:00000000000002dc .L0 
     /tmp/ccnTfDU9.s:729    .text:00000000000002e8 .L0 
     /tmp/ccnTfDU9.s:731    .text:00000000000002e8 .L0 
     /tmp/ccnTfDU9.s:732    .text:00000000000002e8 .L0 
     /tmp/ccnTfDU9.s:733    .text:00000000000002e8 .L0 
     /tmp/ccnTfDU9.s:737    .text:00000000000002f4 .L0 
     /tmp/ccnTfDU9.s:739    .text:00000000000002f8 .L0 
     /tmp/ccnTfDU9.s:743    .text:00000000000002fc .L0 
     /tmp/ccnTfDU9.s:744    .text:00000000000002fc .L0 
     /tmp/ccnTfDU9.s:745    .text:00000000000002fc .L0 
     /tmp/ccnTfDU9.s:747    .text:0000000000000300 .L0 
     /tmp/ccnTfDU9.s:749    .text:0000000000000304 .L0 
GAS LISTING /tmp/ccnTfDU9.s 			page 38


     /tmp/ccnTfDU9.s:751    .text:0000000000000308 .L0 
     /tmp/ccnTfDU9.s:752    .text:0000000000000308 .L0 
     /tmp/ccnTfDU9.s:756    .text:0000000000000314 .L0 
     /tmp/ccnTfDU9.s:758    .text:0000000000000318 .L0 
     /tmp/ccnTfDU9.s:761    .text:000000000000031c .L0 
     /tmp/ccnTfDU9.s:762    .text:000000000000031c .L0 
     /tmp/ccnTfDU9.s:763    .text:000000000000031c .L0 
     /tmp/ccnTfDU9.s:766    .text:0000000000000320 .L0 
     /tmp/ccnTfDU9.s:767    .text:0000000000000320 .L0 
     /tmp/ccnTfDU9.s:770    .text:0000000000000324 .L0 
     /tmp/ccnTfDU9.s:771    .text:0000000000000324 .L0 
     /tmp/ccnTfDU9.s:783    .text:0000000000000344 .L0 
     /tmp/ccnTfDU9.s:784    .text:0000000000000344 .L0 
     /tmp/ccnTfDU9.s:787    .text:000000000000034c .L0 
     /tmp/ccnTfDU9.s:791    .text:0000000000000350 .L0 
     /tmp/ccnTfDU9.s:792    .text:0000000000000350 .L0 
     /tmp/ccnTfDU9.s:793    .text:0000000000000350 .L0 
     /tmp/ccnTfDU9.s:794    .text:0000000000000350 .L0 
     /tmp/ccnTfDU9.s:799    .text:000000000000035c .L0 
     /tmp/ccnTfDU9.s:800    .text:000000000000035c .L0 
     /tmp/ccnTfDU9.s:803    .text:0000000000000364 .L0 
     /tmp/ccnTfDU9.s:807    .text:0000000000000368 .L0 
     /tmp/ccnTfDU9.s:808    .text:0000000000000368 .L0 
     /tmp/ccnTfDU9.s:809    .text:0000000000000368 .L0 
     /tmp/ccnTfDU9.s:811    .text:000000000000036c .L0 
     /tmp/ccnTfDU9.s:813    .text:0000000000000370 .L0 
     /tmp/ccnTfDU9.s:814    .text:0000000000000370 .L0 
     /tmp/ccnTfDU9.s:818    .text:000000000000037c .L0 
     /tmp/ccnTfDU9.s:820    .text:0000000000000380 .L0 
     /tmp/ccnTfDU9.s:823    .text:0000000000000384 .L0 
     /tmp/ccnTfDU9.s:824    .text:0000000000000384 .L0 
     /tmp/ccnTfDU9.s:825    .text:0000000000000384 .L0 
     /tmp/ccnTfDU9.s:827    .text:0000000000000388 .L0 
     /tmp/ccnTfDU9.s:829    .text:000000000000038c .L0 
     /tmp/ccnTfDU9.s:830    .text:000000000000038c .L0 
     /tmp/ccnTfDU9.s:834    .text:0000000000000398 .L0 
     /tmp/ccnTfDU9.s:836    .text:000000000000039c .L0 
     /tmp/ccnTfDU9.s:839    .text:00000000000003a0 .L0 
     /tmp/ccnTfDU9.s:841    .text:00000000000003a0 .L0 
     /tmp/ccnTfDU9.s:842    .text:00000000000003a0 .L0 
     /tmp/ccnTfDU9.s:843    .text:00000000000003a0 .L0 
     /tmp/ccnTfDU9.s:851    .text:00000000000003b8 .L0 
     /tmp/ccnTfDU9.s:852    .text:00000000000003b8 .L0 
     /tmp/ccnTfDU9.s:853    .text:00000000000003b8 .L0 
     /tmp/ccnTfDU9.s:857    .text:00000000000003c8 .L0 
     /tmp/ccnTfDU9.s:858    .text:00000000000003c8 .L0 
     /tmp/ccnTfDU9.s:860    .text:00000000000003cc .L0 
     /tmp/ccnTfDU9.s:864    .text:00000000000003d0 .L0 
     /tmp/ccnTfDU9.s:865    .text:00000000000003d0 .L0 
     /tmp/ccnTfDU9.s:866    .text:00000000000003d0 .L0 
     /tmp/ccnTfDU9.s:867    .text:00000000000003d0 .L0 
     /tmp/ccnTfDU9.s:871    .text:00000000000003dc .L0 
     /tmp/ccnTfDU9.s:873    .text:00000000000003e0 .L0 
     /tmp/ccnTfDU9.s:881    .text:00000000000003e4 .L0 
     /tmp/ccnTfDU9.s:882    .text:00000000000003e4 .L0 
     /tmp/ccnTfDU9.s:883    .text:00000000000003e4 .L0 
  src/../h/riscv.hpp:119    .text:00000000000003e4 .L0 
GAS LISTING /tmp/ccnTfDU9.s 			page 39


     /tmp/ccnTfDU9.s:891    .text:00000000000003ec .L0 
     /tmp/ccnTfDU9.s:892    .text:00000000000003ec .L0 
     /tmp/ccnTfDU9.s:899    .text:00000000000003f0 .L0 
     /tmp/ccnTfDU9.s:900    .text:00000000000003f0 .L0 
     /tmp/ccnTfDU9.s:901    .text:00000000000003f0 .L0 
  src/../h/riscv.hpp:143    .text:00000000000003f0 .L0 
     /tmp/ccnTfDU9.s:909    .text:00000000000003f8 .L0 
     /tmp/ccnTfDU9.s:910    .text:00000000000003f8 .L0 
     /tmp/ccnTfDU9.s:917    .text:00000000000003fc .L0 
     /tmp/ccnTfDU9.s:918    .text:00000000000003fc .L0 
     /tmp/ccnTfDU9.s:919    .text:00000000000003fc .L0 
  src/../h/riscv.hpp:187    .text:00000000000003fc .L0 
     /tmp/ccnTfDU9.s:927    .text:0000000000000404 .L0 
     /tmp/ccnTfDU9.s:928    .text:0000000000000404 .L0 
     /tmp/ccnTfDU9.s:933    .text:0000000000000408 .L0 
     /tmp/ccnTfDU9.s:934    .text:0000000000000408 .L0 
     /tmp/ccnTfDU9.s:938    .text:0000000000000418 .L0 
     /tmp/ccnTfDU9.s:939    .text:0000000000000418 .L0 
     /tmp/ccnTfDU9.s:945    .text:000000000000042c .L0 
     /tmp/ccnTfDU9.s:946    .text:000000000000042c .L0 
     /tmp/ccnTfDU9.s:950    .text:000000000000043c .L0 
     /tmp/ccnTfDU9.s:951    .text:000000000000043c .L0 
     /tmp/ccnTfDU9.s:955    .text:000000000000044c .L0 
     /tmp/ccnTfDU9.s:956    .text:000000000000044c .L0 
     /tmp/ccnTfDU9.s:962    .text:0000000000000460 .L0 
     /tmp/ccnTfDU9.s:963    .text:0000000000000460 .L0 
     /tmp/ccnTfDU9.s:967    .text:0000000000000470 .L0 
     /tmp/ccnTfDU9.s:968    .text:0000000000000470 .L0 
     /tmp/ccnTfDU9.s:972    .text:0000000000000480 .L0 
     /tmp/ccnTfDU9.s:973    .text:0000000000000480 .L0 
     /tmp/ccnTfDU9.s:979    .text:0000000000000494 .L0 
     /tmp/ccnTfDU9.s:980    .text:0000000000000494 .L0 
     /tmp/ccnTfDU9.s:984    .text:00000000000004a4 .L0 
     /tmp/ccnTfDU9.s:985    .text:00000000000004a4 .L0 
     /tmp/ccnTfDU9.s:989    .text:00000000000004b4 .L0 
     /tmp/ccnTfDU9.s:990    .text:00000000000004b4 .L0 
     /tmp/ccnTfDU9.s:996    .text:00000000000004c8 .L0 
     /tmp/ccnTfDU9.s:997    .text:00000000000004c8 .L0 
     /tmp/ccnTfDU9.s:1006   .text:00000000000004d8 .L0 
     /tmp/ccnTfDU9.s:1016   .text:00000000000004e0 .L0 
     /tmp/ccnTfDU9.s:1028   .text:00000000000004f8 .L0 
     /tmp/ccnTfDU9.s:1063   .bss:0000000000000000 _ZN5Riscv8timelistE
     /tmp/ccnTfDU9.s:1071   .bss:0000000000000010 _ZN5Riscv9bufferOutE
     /tmp/ccnTfDU9.s:1067   .bss:0000000000000008 _ZN5Riscv8bufferInE
     /tmp/ccnTfDU9.s:1060   .bss:0000000000000000 .LANCHOR0
     /tmp/ccnTfDU9.s:1085   .text:00000000000004f8 .L0 
     /tmp/ccnTfDU9.s:296    .rodata:0000000000000000 .L17
     /tmp/ccnTfDU9.s:288    .text:00000000000000fc .L0 
     /tmp/ccnTfDU9.s:373    .text:0000000000000114 .L0 
     /tmp/ccnTfDU9.s:380    .text:0000000000000128 .L0 
     /tmp/ccnTfDU9.s:387    .text:0000000000000138 .L0 
     /tmp/ccnTfDU9.s:436    .text:0000000000000168 .L0 
     /tmp/ccnTfDU9.s:488    .text:00000000000001a8 .L0 
     /tmp/ccnTfDU9.s:497    .text:00000000000001c0 .L0 
     /tmp/ccnTfDU9.s:503    .text:00000000000001d0 .L0 
     /tmp/ccnTfDU9.s:844    .text:00000000000003a4 .L0 
     /tmp/ccnTfDU9.s:853    .text:00000000000003b8 .L0 
GAS LISTING /tmp/ccnTfDU9.s 			page 40


     /tmp/ccnTfDU9.s:122    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccnTfDU9.s:934    .text:0000000000000408 .L0 
     /tmp/ccnTfDU9.s:125    .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccnTfDU9.s:946    .text:000000000000042c .L0 
     /tmp/ccnTfDU9.s:128    .rodata.str1.8:0000000000000018 .LC2
     /tmp/ccnTfDU9.s:951    .text:000000000000043c .L0 
     /tmp/ccnTfDU9.s:963    .text:0000000000000460 .L0 
     /tmp/ccnTfDU9.s:131    .rodata.str1.8:0000000000000028 .LC3
     /tmp/ccnTfDU9.s:968    .text:0000000000000470 .L0 
     /tmp/ccnTfDU9.s:980    .text:0000000000000494 .L0 
     /tmp/ccnTfDU9.s:134    .rodata.str1.8:0000000000000038 .LC4
     /tmp/ccnTfDU9.s:985    .text:00000000000004a4 .L0 
     /tmp/ccnTfDU9.s:997    .text:00000000000004c8 .L0 
     /tmp/ccnTfDU9.s:98     .text:000000000000004c .L4
     /tmp/ccnTfDU9.s:87     .text:0000000000000040 .L3
     /tmp/ccnTfDU9.s:366    .text:0000000000000114 .L40
     /tmp/ccnTfDU9.s:455    .text:0000000000000184 .L41
     /tmp/ccnTfDU9.s:875    .text:00000000000003e4 .L14
     /tmp/ccnTfDU9.s:531    .text:0000000000000200 .L15
     /tmp/ccnTfDU9.s:411    .text:000000000000015c .L42
     /tmp/ccnTfDU9.s:559    .text:000000000000020c .L7
     /tmp/ccnTfDU9.s:394    .text:0000000000000150 .L9
     /tmp/ccnTfDU9.s:482    .text:00000000000001a8 .L13
     /tmp/ccnTfDU9.s:474    .text:0000000000000198 .L12
     /tmp/ccnTfDU9.s:670    .text:00000000000002a4 .L33
     /tmp/ccnTfDU9.s:648    .text:000000000000028c .L34
     /tmp/ccnTfDU9.s:697    .text:00000000000002c8 .L24
     /tmp/ccnTfDU9.s:687    .text:00000000000002bc .L35
     /tmp/ccnTfDU9.s:706    .text:00000000000002d0 .L36
     /tmp/ccnTfDU9.s:741    .text:00000000000002fc .L32
     /tmp/ccnTfDU9.s:727    .text:00000000000002e8 .L31
     /tmp/ccnTfDU9.s:608    .text:000000000000024c .L30
     /tmp/ccnTfDU9.s:508    .text:00000000000001e4 .L29
     /tmp/ccnTfDU9.s:624    .text:0000000000000268 .L28
     /tmp/ccnTfDU9.s:634    .text:0000000000000278 .L27
     /tmp/ccnTfDU9.s:585    .text:000000000000022c .L26
     /tmp/ccnTfDU9.s:641    .text:0000000000000284 .L25
     /tmp/ccnTfDU9.s:759    .text:000000000000031c .L23
     /tmp/ccnTfDU9.s:789    .text:0000000000000350 .L22
     /tmp/ccnTfDU9.s:805    .text:0000000000000368 .L21
     /tmp/ccnTfDU9.s:821    .text:0000000000000384 .L20
     /tmp/ccnTfDU9.s:862    .text:00000000000003d0 .L19
     /tmp/ccnTfDU9.s:849    .text:00000000000003b8 .L18
     /tmp/ccnTfDU9.s:837    .text:00000000000003a0 .L16
     /tmp/ccnTfDU9.s:381    .text:0000000000000130 .LEHB0
     /tmp/ccnTfDU9.s:141    .text:0000000000000058 .LFB106
     /tmp/ccnTfDU9.s:774    .text:0000000000000330 .LEHE0
     /tmp/ccnTfDU9.s:778    .text:000000000000033c .LEHB1
     /tmp/ccnTfDU9.s:781    .text:0000000000000344 .LEHE1
     /tmp/ccnTfDU9.s:1008   .text:00000000000004dc .L38
     /tmp/ccnTfDU9.s:795    .text:0000000000000354 .LEHB2
     /tmp/ccnTfDU9.s:1000   .text:00000000000004d8 .LEHE2
     /tmp/ccnTfDU9.s:1020   .text:00000000000004f0 .LEHB3
     /tmp/ccnTfDU9.s:1023   .text:00000000000004f8 .LEHE3
     /tmp/ccnTfDU9.s:4677   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccnTfDU9.s:6989   .debug_str:00000000000012e6 .LASF365
     /tmp/ccnTfDU9.s:6537   .debug_str:000000000000051b .LASF366
GAS LISTING /tmp/ccnTfDU9.s 			page 41


     /tmp/ccnTfDU9.s:6507   .debug_str:000000000000041a .LASF367
     /tmp/ccnTfDU9.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccnTfDU9.s:1074   .text:00000000000004f8 .Letext0
     /tmp/ccnTfDU9.s:6359   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccnTfDU9.s:6413   .debug_str:0000000000000172 .LASF0
     /tmp/ccnTfDU9.s:7057   .debug_str:00000000000015e5 .LASF1
     /tmp/ccnTfDU9.s:6991   .debug_str:00000000000013aa .LASF2
     /tmp/ccnTfDU9.s:6949   .debug_str:00000000000011a1 .LASF4
     /tmp/ccnTfDU9.s:6959   .debug_str:00000000000011f0 .LASF3
     /tmp/ccnTfDU9.s:6587   .debug_str:0000000000000694 .LASF5
     /tmp/ccnTfDU9.s:6699   .debug_str:0000000000000a1f .LASF6
     /tmp/ccnTfDU9.s:6655   .debug_str:000000000000089f .LASF7
     /tmp/ccnTfDU9.s:6877   .debug_str:0000000000000f6e .LASF8
     /tmp/ccnTfDU9.s:6449   .debug_str:0000000000000292 .LASF9
     /tmp/ccnTfDU9.s:7043   .debug_str:000000000000156c .LASF10
     /tmp/ccnTfDU9.s:6591   .debug_str:00000000000006a9 .LASF11
     /tmp/ccnTfDU9.s:6497   .debug_str:00000000000003d8 .LASF12
     /tmp/ccnTfDU9.s:6701   .debug_str:0000000000000a26 .LASF13
     /tmp/ccnTfDU9.s:6597   .debug_str:00000000000006d6 .LASF14
     /tmp/ccnTfDU9.s:6931   .debug_str:000000000000114f .LASF15
     /tmp/ccnTfDU9.s:6603   .debug_str:0000000000000709 .LASF16
     /tmp/ccnTfDU9.s:6555   .debug_str:00000000000005b8 .LASF17
     /tmp/ccnTfDU9.s:6575   .debug_str:000000000000063a .LASF18
     /tmp/ccnTfDU9.s:6869   .debug_str:0000000000000f4e .LASF19
     /tmp/ccnTfDU9.s:6417   .debug_str:0000000000000191 .LASF20
     /tmp/ccnTfDU9.s:6647   .debug_str:0000000000000869 .LASF21
     /tmp/ccnTfDU9.s:6807   .debug_str:0000000000000d90 .LASF22
     /tmp/ccnTfDU9.s:6745   .debug_str:0000000000000b8a .LASF23
     /tmp/ccnTfDU9.s:7009   .debug_str:0000000000001433 .LASF24
     /tmp/ccnTfDU9.s:6733   .debug_str:0000000000000b3b .LASF25
     /tmp/ccnTfDU9.s:7097   .debug_str:0000000000001753 .LASF26
     /tmp/ccnTfDU9.s:6897   .debug_str:0000000000001037 .LASF27
     /tmp/ccnTfDU9.s:6405   .debug_str:0000000000000134 .LASF28
     /tmp/ccnTfDU9.s:6821   .debug_str:0000000000000e07 .LASF29
     /tmp/ccnTfDU9.s:6777   .debug_str:0000000000000c78 .LASF31
     /tmp/ccnTfDU9.s:6817   .debug_str:0000000000000deb .LASF77
     /tmp/ccnTfDU9.s:6963   .debug_str:0000000000001209 .LASF79
     /tmp/ccnTfDU9.s:6639   .debug_str:000000000000082c .LASF30
     /tmp/ccnTfDU9.s:7015   .debug_str:000000000000146b .LASF32
     /tmp/ccnTfDU9.s:6923   .debug_str:00000000000010f6 .LASF33
     /tmp/ccnTfDU9.s:7031   .debug_str:00000000000014fc .LASF34
     /tmp/ccnTfDU9.s:6531   .debug_str:00000000000004ea .LASF35
     /tmp/ccnTfDU9.s:6395   .debug_str:00000000000000ee .LASF36
     /tmp/ccnTfDU9.s:6993   .debug_str:00000000000013b8 .LASF37
     /tmp/ccnTfDU9.s:7025   .debug_str:00000000000014b0 .LASF38
     /tmp/ccnTfDU9.s:6795   .debug_str:0000000000000d47 .LASF39
     /tmp/ccnTfDU9.s:7011   .debug_str:000000000000143b .LASF40
     /tmp/ccnTfDU9.s:6633   .debug_str:0000000000000803 .LASF41
     /tmp/ccnTfDU9.s:6681   .debug_str:0000000000000974 .LASF42
     /tmp/ccnTfDU9.s:6725   .debug_str:0000000000000b0f .LASF43
     /tmp/ccnTfDU9.s:6771   .debug_str:0000000000000c3f .LASF44
     /tmp/ccnTfDU9.s:6717   .debug_str:0000000000000ad7 .LASF45
     /tmp/ccnTfDU9.s:6627   .debug_str:00000000000007c1 .LASF46
     /tmp/ccnTfDU9.s:6451   .debug_str:00000000000002a2 .LASF47
     /tmp/ccnTfDU9.s:6435   .debug_str:00000000000001f9 .LASF48
     /tmp/ccnTfDU9.s:6911   .debug_str:000000000000109b .LASF49
     /tmp/ccnTfDU9.s:7067   .debug_str:000000000000162f .LASF50
GAS LISTING /tmp/ccnTfDU9.s 			page 42


     /tmp/ccnTfDU9.s:6421   .debug_str:00000000000001ad .LASF51
     /tmp/ccnTfDU9.s:6715   .debug_str:0000000000000ab9 .LASF52
     /tmp/ccnTfDU9.s:6695   .debug_str:0000000000000a0c .LASF53
     /tmp/ccnTfDU9.s:6737   .debug_str:0000000000000b4b .LASF54
     /tmp/ccnTfDU9.s:6547   .debug_str:000000000000057e .LASF55
     /tmp/ccnTfDU9.s:6511   .debug_str:0000000000000441 .LASF56
     /tmp/ccnTfDU9.s:6891   .debug_str:000000000000100a .LASF57
     /tmp/ccnTfDU9.s:6641   .debug_str:0000000000000838 .LASF58
     /tmp/ccnTfDU9.s:6743   .debug_str:0000000000000b7e .LASF59
     /tmp/ccnTfDU9.s:7063   .debug_str:0000000000001609 .LASF61
     /tmp/ccnTfDU9.s:6649   .debug_str:0000000000000872 .LASF60
     /tmp/ccnTfDU9.s:7039   .debug_str:0000000000001549 .LASF62
     /tmp/ccnTfDU9.s:6569   .debug_str:0000000000000610 .LASF63
     /tmp/ccnTfDU9.s:6373   .debug_str:0000000000000047 .LASF64
     /tmp/ccnTfDU9.s:6847   .debug_str:0000000000000eac .LASF65
     /tmp/ccnTfDU9.s:6853   .debug_str:0000000000000ed7 .LASF66
     /tmp/ccnTfDU9.s:6567   .debug_str:0000000000000605 .LASF67
     /tmp/ccnTfDU9.s:6995   .debug_str:00000000000013c3 .LASF68
     /tmp/ccnTfDU9.s:6431   .debug_str:00000000000001e0 .LASF69
     /tmp/ccnTfDU9.s:6841   .debug_str:0000000000000e77 .LASF70
     /tmp/ccnTfDU9.s:6809   .debug_str:0000000000000d98 .LASF71
     /tmp/ccnTfDU9.s:6953   .debug_str:00000000000011b8 .LASF72
     /tmp/ccnTfDU9.s:6683   .debug_str:000000000000098e .LASF73
     /tmp/ccnTfDU9.s:6549   .debug_str:0000000000000586 .LASF74
     /tmp/ccnTfDU9.s:6971   .debug_str:0000000000001260 .LASF75
     /tmp/ccnTfDU9.s:7081   .debug_str:00000000000016ae .LASF76
     /tmp/ccnTfDU9.s:6463   .debug_str:00000000000002f6 .LASF78
     /tmp/ccnTfDU9.s:6703   .debug_str:0000000000000a36 .LASF80
     /tmp/ccnTfDU9.s:7071   .debug_str:0000000000001663 .LASF81
     /tmp/ccnTfDU9.s:6793   .debug_str:0000000000000d3b .LASF82
     /tmp/ccnTfDU9.s:6571   .debug_str:0000000000000619 .LASF83
     /tmp/ccnTfDU9.s:6787   .debug_str:0000000000000cf4 .LASF84
     /tmp/ccnTfDU9.s:6609   .debug_str:0000000000000747 .LASF332
     /tmp/ccnTfDU9.s:6477   .debug_str:000000000000036c .LASF85
     /tmp/ccnTfDU9.s:6975   .debug_str:0000000000001273 .LASF86
     /tmp/ccnTfDU9.s:7079   .debug_str:00000000000016a6 .LASF87
     /tmp/ccnTfDU9.s:7099   .debug_str:000000000000175c .LASF88
     /tmp/ccnTfDU9.s:6465   .debug_str:00000000000002fd .LASF89
     /tmp/ccnTfDU9.s:6613   .debug_str:0000000000000757 .LASF90
     /tmp/ccnTfDU9.s:6645   .debug_str:000000000000085e .LASF91
     /tmp/ccnTfDU9.s:7013   .debug_str:0000000000001455 .LASF93
     /tmp/ccnTfDU9.s:6643   .debug_str:0000000000000851 .LASF92
     /tmp/ccnTfDU9.s:7075   .debug_str:000000000000167c .LASF94
     /tmp/ccnTfDU9.s:6475   .debug_str:000000000000035a .LASF96
     /tmp/ccnTfDU9.s:6579   .debug_str:000000000000066d .LASF95
     /tmp/ccnTfDU9.s:6409   .debug_str:0000000000000149 .LASF97
     /tmp/ccnTfDU9.s:6661   .debug_str:00000000000008d3 .LASF98
     /tmp/ccnTfDU9.s:6671   .debug_str:0000000000000934 .LASF99
     /tmp/ccnTfDU9.s:6935   .debug_str:0000000000001160 .LASF100
     /tmp/ccnTfDU9.s:6951   .debug_str:00000000000011a8 .LASF101
     /tmp/ccnTfDU9.s:6631   .debug_str:00000000000007f7 .LASF102
     /tmp/ccnTfDU9.s:6433   .debug_str:00000000000001ec .LASF103
     /tmp/ccnTfDU9.s:6977   .debug_str:000000000000129c .LASF104
     /tmp/ccnTfDU9.s:6921   .debug_str:00000000000010e0 .LASF105
     /tmp/ccnTfDU9.s:6361   .debug_str:0000000000000000 .LASF106
     /tmp/ccnTfDU9.s:6981   .debug_str:00000000000012a9 .LASF107
     /tmp/ccnTfDU9.s:6941   .debug_str:000000000000117d .LASF108
GAS LISTING /tmp/ccnTfDU9.s 			page 43


     /tmp/ccnTfDU9.s:6805   .debug_str:0000000000000d88 .LASF109
     /tmp/ccnTfDU9.s:6697   .debug_str:0000000000000a18 .LASF110
     /tmp/ccnTfDU9.s:6391   .debug_str:00000000000000da .LASF111
     /tmp/ccnTfDU9.s:7035   .debug_str:0000000000001526 .LASF112
     /tmp/ccnTfDU9.s:6813   .debug_str:0000000000000dac .LASF113
     /tmp/ccnTfDU9.s:7003   .debug_str:000000000000140f .LASF114
     /tmp/ccnTfDU9.s:6867   .debug_str:0000000000000f45 .LASF117
     /tmp/ccnTfDU9.s:6803   .debug_str:0000000000000d75 .LASF119
     /tmp/ccnTfDU9.s:6773   .debug_str:0000000000000c5c .LASF115
     /tmp/ccnTfDU9.s:6623   .debug_str:00000000000007a1 .LASF116
     /tmp/ccnTfDU9.s:7091   .debug_str:0000000000001700 .LASF118
     /tmp/ccnTfDU9.s:7001   .debug_str:00000000000013f6 .LASF120
     /tmp/ccnTfDU9.s:6775   .debug_str:0000000000000c68 .LASF121
     /tmp/ccnTfDU9.s:6709   .debug_str:0000000000000a7c .LASF122
     /tmp/ccnTfDU9.s:7021   .debug_str:00000000000014a1 .LASF123
     /tmp/ccnTfDU9.s:6727   .debug_str:0000000000000b1a .LASF124
     /tmp/ccnTfDU9.s:6675   .debug_str:0000000000000953 .LASF125
     /tmp/ccnTfDU9.s:6659   .debug_str:00000000000008c4 .LASF127
     /tmp/ccnTfDU9.s:6797   .debug_str:0000000000000d50 .LASF126
     /tmp/ccnTfDU9.s:6573   .debug_str:000000000000062b .LASF128
     /tmp/ccnTfDU9.s:6985   .debug_str:00000000000012c4 .LASF129
     /tmp/ccnTfDU9.s:6765   .debug_str:0000000000000c03 .LASF130
     /tmp/ccnTfDU9.s:6375   .debug_str:0000000000000061 .LASF131
     /tmp/ccnTfDU9.s:6629   .debug_str:00000000000007de .LASF132
     /tmp/ccnTfDU9.s:6535   .debug_str:0000000000000514 .LASF133
     /tmp/ccnTfDU9.s:6515   .debug_str:0000000000000475 .LASF134
     /tmp/ccnTfDU9.s:6487   .debug_str:00000000000003a2 .LASF135
     /tmp/ccnTfDU9.s:6919   .debug_str:00000000000010d0 .LASF136
     /tmp/ccnTfDU9.s:6917   .debug_str:00000000000010ca .LASF137
     /tmp/ccnTfDU9.s:6913   .debug_str:00000000000010a6 .LASF138
     /tmp/ccnTfDU9.s:6997   .debug_str:00000000000013e0 .LASF139
     /tmp/ccnTfDU9.s:6407   .debug_str:000000000000013f .LASF140
     /tmp/ccnTfDU9.s:7041   .debug_str:0000000000001566 .LASF141
     /tmp/ccnTfDU9.s:6665   .debug_str:00000000000008ee .LASF142
     /tmp/ccnTfDU9.s:6719   .debug_str:0000000000000ae2 .LASF143
     /tmp/ccnTfDU9.s:6617   .debug_str:000000000000076c .LASF144
     /tmp/ccnTfDU9.s:6493   .debug_str:00000000000003b9 .LASF145
     /tmp/ccnTfDU9.s:6447   .debug_str:0000000000000280 .LASF146
     /tmp/ccnTfDU9.s:7087   .debug_str:00000000000016e4 .LASF147
     /tmp/ccnTfDU9.s:6425   .debug_str:00000000000001d0 .LASF148
     /tmp/ccnTfDU9.s:6865   .debug_str:0000000000000f38 .LASF149
     /tmp/ccnTfDU9.s:6707   .debug_str:0000000000000a6f .LASF150
     /tmp/ccnTfDU9.s:6589   .debug_str:000000000000069b .LASF151
     /tmp/ccnTfDU9.s:6483   .debug_str:0000000000000394 .LASF152
     /tmp/ccnTfDU9.s:6907   .debug_str:0000000000001079 .LASF153
     /tmp/ccnTfDU9.s:7049   .debug_str:00000000000015a5 .LASF154
     /tmp/ccnTfDU9.s:6973   .debug_str:000000000000126e .LASF240
     /tmp/ccnTfDU9.s:6429   .debug_str:00000000000001db .LASF155
     /tmp/ccnTfDU9.s:6933   .debug_str:000000000000115b .LASF156
     /tmp/ccnTfDU9.s:6387   .debug_str:00000000000000b2 .LASF157
     /tmp/ccnTfDU9.s:6365   .debug_str:0000000000000015 .LASF158
     /tmp/ccnTfDU9.s:6721   .debug_str:0000000000000af3 .LASF159
     /tmp/ccnTfDU9.s:7069   .debug_str:000000000000164c .LASF160
     /tmp/ccnTfDU9.s:6739   .debug_str:0000000000000b69 .LASF243
     /tmp/ccnTfDU9.s:6457   .debug_str:00000000000002cc .LASF244
     /tmp/ccnTfDU9.s:6501   .debug_str:0000000000000403 .LASF161
     /tmp/ccnTfDU9.s:7027   .debug_str:00000000000014cd .LASF162
GAS LISTING /tmp/ccnTfDU9.s 			page 44


     /tmp/ccnTfDU9.s:6363   .debug_str:000000000000000c .LASF163
     /tmp/ccnTfDU9.s:6371   .debug_str:000000000000002a .LASF164
     /tmp/ccnTfDU9.s:6735   .debug_str:0000000000000b43 .LASF165
     /tmp/ccnTfDU9.s:6687   .debug_str:00000000000009a5 .LASF166
     /tmp/ccnTfDU9.s:6819   .debug_str:0000000000000dfb .LASF167
     /tmp/ccnTfDU9.s:6887   .debug_str:0000000000000fe7 .LASF168
     /tmp/ccnTfDU9.s:6769   .debug_str:0000000000000c33 .LASF169
     /tmp/ccnTfDU9.s:6705   .debug_str:0000000000000a4e .LASF170
     /tmp/ccnTfDU9.s:6393   .debug_str:00000000000000e4 .LASF171
     /tmp/ccnTfDU9.s:6513   .debug_str:000000000000045a .LASF172
     /tmp/ccnTfDU9.s:7089   .debug_str:00000000000016f5 .LASF173
     /tmp/ccnTfDU9.s:6389   .debug_str:00000000000000bd .LASF174
     /tmp/ccnTfDU9.s:6541   .debug_str:0000000000000550 .LASF175
     /tmp/ccnTfDU9.s:6893   .debug_str:0000000000001012 .LASF176
     /tmp/ccnTfDU9.s:6751   .debug_str:0000000000000bbf .LASF177
     /tmp/ccnTfDU9.s:6519   .debug_str:0000000000000490 .LASF178
     /tmp/ccnTfDU9.s:6673   .debug_str:000000000000094b .LASF179
     /tmp/ccnTfDU9.s:6889   .debug_str:0000000000001005 .LASF180
     /tmp/ccnTfDU9.s:6881   .debug_str:0000000000000fa3 .LASF181
     /tmp/ccnTfDU9.s:6861   .debug_str:0000000000000f17 .LASF182
     /tmp/ccnTfDU9.s:6905   .debug_str:000000000000105c .LASF215
     /tmp/ccnTfDU9.s:6621   .debug_str:000000000000078d .LASF183
     /tmp/ccnTfDU9.s:6411   .debug_str:000000000000015d .LASF184
     /tmp/ccnTfDU9.s:6595   .debug_str:00000000000006c2 .LASF185
     /tmp/ccnTfDU9.s:6455   .debug_str:00000000000002b2 .LASF186
     /tmp/ccnTfDU9.s:6915   .debug_str:00000000000010ab .LASF187
     /tmp/ccnTfDU9.s:6829   .debug_str:0000000000000e39 .LASF188
     /tmp/ccnTfDU9.s:6381   .debug_str:0000000000000085 .LASF189
     /tmp/ccnTfDU9.s:6823   .debug_str:0000000000000e14 .LASF190
     /tmp/ccnTfDU9.s:6857   .debug_str:0000000000000eff .LASF191
     /tmp/ccnTfDU9.s:6845   .debug_str:0000000000000e9c .LASF192
     /tmp/ccnTfDU9.s:6559   .debug_str:00000000000005d3 .LASF193
     /tmp/ccnTfDU9.s:6529   .debug_str:00000000000004da .LASF194
     /tmp/ccnTfDU9.s:6781   .debug_str:0000000000000cb8 .LASF368
     /tmp/ccnTfDU9.s:6979   .debug_str:00000000000012a1 .LASF195
     /tmp/ccnTfDU9.s:6983   .debug_str:00000000000012ae .LASF196
     /tmp/ccnTfDU9.s:6489   .debug_str:00000000000003a8 .LASF197
     /tmp/ccnTfDU9.s:6927   .debug_str:0000000000001125 .LASF198
     /tmp/ccnTfDU9.s:6625   .debug_str:00000000000007b9 .LASF199
     /tmp/ccnTfDU9.s:6423   .debug_str:00000000000001b9 .LASF200
     /tmp/ccnTfDU9.s:6899   .debug_str:000000000000103c .LASF201
     /tmp/ccnTfDU9.s:6815   .debug_str:0000000000000dd4 .LASF202
     /tmp/ccnTfDU9.s:6843   .debug_str:0000000000000e95 .LASF203
     /tmp/ccnTfDU9.s:6397   .debug_str:000000000000010b .LASF204
     /tmp/ccnTfDU9.s:6965   .debug_str:000000000000121d .LASF205
     /tmp/ccnTfDU9.s:6367   .debug_str:000000000000001a .LASF206
     /tmp/ccnTfDU9.s:6399   .debug_str:0000000000000112 .LASF207
     /tmp/ccnTfDU9.s:6385   .debug_str:00000000000000ad .LASF208
     /tmp/ccnTfDU9.s:6379   .debug_str:0000000000000080 .LASF209
     /tmp/ccnTfDU9.s:6731   .debug_str:0000000000000b32 .LASF210
     /tmp/ccnTfDU9.s:6561   .debug_str:00000000000005dc .LASF212
     /tmp/ccnTfDU9.s:6557   .debug_str:00000000000005ce .LASF211
     /tmp/ccnTfDU9.s:6533   .debug_str:00000000000004f5 .LASF213
     /tmp/ccnTfDU9.s:6601   .debug_str:00000000000006ef .LASF214
     /tmp/ccnTfDU9.s:6799   .debug_str:0000000000000d55 .LASF216
     /tmp/ccnTfDU9.s:6811   .debug_str:0000000000000da0 .LASF217
     /tmp/ccnTfDU9.s:6835   .debug_str:0000000000000e4d .LASF218
GAS LISTING /tmp/ccnTfDU9.s 			page 45


     /tmp/ccnTfDU9.s:6657   .debug_str:00000000000008b2 .LASF219
     /tmp/ccnTfDU9.s:6517   .debug_str:0000000000000486 .LASF220
     /tmp/ccnTfDU9.s:6783   .debug_str:0000000000000cca .LASF221
     /tmp/ccnTfDU9.s:6619   .debug_str:000000000000077c .LASF222
     /tmp/ccnTfDU9.s:6415   .debug_str:000000000000017f .LASF223
     /tmp/ccnTfDU9.s:6791   .debug_str:0000000000000d23 .LASF224
     /tmp/ccnTfDU9.s:6827   .debug_str:0000000000000e34 .LASF225
     /tmp/ccnTfDU9.s:6759   .debug_str:0000000000000bdd .LASF226
     /tmp/ccnTfDU9.s:6599   .debug_str:00000000000006e6 .LASF227
     /tmp/ccnTfDU9.s:7055   .debug_str:00000000000015cd .LASF228
     /tmp/ccnTfDU9.s:6693   .debug_str:00000000000009f5 .LASF229
     /tmp/ccnTfDU9.s:6763   .debug_str:0000000000000bfa .LASF230
     /tmp/ccnTfDU9.s:6885   .debug_str:0000000000000fcf .LASF231
     /tmp/ccnTfDU9.s:6523   .debug_str:00000000000004a4 .LASF232
     /tmp/ccnTfDU9.s:7047   .debug_str:000000000000158e .LASF233
     /tmp/ccnTfDU9.s:6757   .debug_str:0000000000000bd3 .LASF234
     /tmp/ccnTfDU9.s:6713   .debug_str:0000000000000aa0 .LASF235
     /tmp/ccnTfDU9.s:6871   .debug_str:0000000000000f56 .LASF236
     /tmp/ccnTfDU9.s:6837   .debug_str:0000000000000e57 .LASF237
     /tmp/ccnTfDU9.s:7045   .debug_str:000000000000157a .LASF238
     /tmp/ccnTfDU9.s:6785   .debug_str:0000000000000cdb .LASF239
     /tmp/ccnTfDU9.s:6925   .debug_str:0000000000001102 .LASF241
     /tmp/ccnTfDU9.s:6527   .debug_str:00000000000004b3 .LASF242
     /tmp/ccnTfDU9.s:6691   .debug_str:00000000000009ce .LASF245
     /tmp/ccnTfDU9.s:6539   .debug_str:0000000000000529 .LASF246
     /tmp/ccnTfDU9.s:7093   .debug_str:000000000000170e .LASF247
     /tmp/ccnTfDU9.s:6667   .debug_str:00000000000008f4 .LASF248
     /tmp/ccnTfDU9.s:6437   .debug_str:0000000000000216 .LASF249
     /tmp/ccnTfDU9.s:6967   .debug_str:0000000000001223 .LASF250
     /tmp/ccnTfDU9.s:6471   .debug_str:000000000000031b .LASF251
     /tmp/ccnTfDU9.s:6779   .debug_str:0000000000000c8b .LASF252
     /tmp/ccnTfDU9.s:6577   .debug_str:0000000000000643 .LASF253
     /tmp/ccnTfDU9.s:6479   .debug_str:0000000000000380 .LASF254
     /tmp/ccnTfDU9.s:6611   .debug_str:000000000000074c .LASF258
     /tmp/ccnTfDU9.s:6583   .debug_str:000000000000067e .LASF255
     /tmp/ccnTfDU9.s:6901   .debug_str:0000000000001044 .LASF256
     /tmp/ccnTfDU9.s:6945   .debug_str:000000000000118e .LASF257
     /tmp/ccnTfDU9.s:6663   .debug_str:00000000000008df .LASF259
     /tmp/ccnTfDU9.s:6849   .debug_str:0000000000000eb7 .LASF260
     /tmp/ccnTfDU9.s:6403   .debug_str:0000000000000127 .LASF261
     /tmp/ccnTfDU9.s:6615   .debug_str:0000000000000760 .LASF262
     /tmp/ccnTfDU9.s:6741   .debug_str:0000000000000b73 .LASF263
     /tmp/ccnTfDU9.s:7029   .debug_str:00000000000014e4 .LASF264
     /tmp/ccnTfDU9.s:6481   .debug_str:0000000000000386 .LASF265
     /tmp/ccnTfDU9.s:6749   .debug_str:0000000000000ba4 .LASF266
     /tmp/ccnTfDU9.s:6689   .debug_str:00000000000009c1 .LASF267
     /tmp/ccnTfDU9.s:6955   .debug_str:00000000000011d1 .LASF268
     /tmp/ccnTfDU9.s:7083   .debug_str:00000000000016ce .LASF269
     /tmp/ccnTfDU9.s:7037   .debug_str:0000000000001534 .LASF270
     /tmp/ccnTfDU9.s:6491   .debug_str:00000000000003b0 .LASF271
     /tmp/ccnTfDU9.s:6445   .debug_str:000000000000026b .LASF272
     /tmp/ccnTfDU9.s:6525   .debug_str:00000000000004ac .LASF273
     /tmp/ccnTfDU9.s:6543   .debug_str:0000000000000559 .LASF274
     /tmp/ccnTfDU9.s:6581   .debug_str:0000000000000677 .LASF275
     /tmp/ccnTfDU9.s:6441   .debug_str:000000000000024d .LASF276
     /tmp/ccnTfDU9.s:7059   .debug_str:00000000000015f8 .LASF277
     /tmp/ccnTfDU9.s:6929   .debug_str:000000000000113b .LASF278
GAS LISTING /tmp/ccnTfDU9.s 			page 46


     /tmp/ccnTfDU9.s:6839   .debug_str:0000000000000e6f .LASF279
     /tmp/ccnTfDU9.s:6473   .debug_str:0000000000000346 .LASF280
     /tmp/ccnTfDU9.s:6859   .debug_str:0000000000000f0f .LASF281
     /tmp/ccnTfDU9.s:6747   .debug_str:0000000000000b90 .LASF282
     /tmp/ccnTfDU9.s:6729   .debug_str:0000000000000b2a .LASF283
     /tmp/ccnTfDU9.s:6851   .debug_str:0000000000000ec3 .LASF284
     /tmp/ccnTfDU9.s:7007   .debug_str:000000000000142c .LASF285
     /tmp/ccnTfDU9.s:6653   .debug_str:000000000000088c .LASF286
     /tmp/ccnTfDU9.s:6485   .debug_str:000000000000039b .LASF287
     /tmp/ccnTfDU9.s:6987   .debug_str:00000000000012d3 .LASF288
     /tmp/ccnTfDU9.s:6755   .debug_str:0000000000000bcd .LASF289
     /tmp/ccnTfDU9.s:7077   .debug_str:0000000000001694 .LASF290
     /tmp/ccnTfDU9.s:6677   .debug_str:0000000000000958 .LASF291
     /tmp/ccnTfDU9.s:6545   .debug_str:000000000000056c .LASF292
     /tmp/ccnTfDU9.s:6939   .debug_str:0000000000001170 .LASF293
     /tmp/ccnTfDU9.s:6637   .debug_str:0000000000000812 .LASF294
     /tmp/ccnTfDU9.s:6895   .debug_str:000000000000102c .LASF295
     /tmp/ccnTfDU9.s:6495   .debug_str:00000000000003c0 .LASF296
     /tmp/ccnTfDU9.s:6443   .debug_str:0000000000000260 .LASF297
     /tmp/ccnTfDU9.s:7095   .debug_str:000000000000173b .LASF298
     /tmp/ccnTfDU9.s:6593   .debug_str:00000000000006b8 .LASF299
     /tmp/ccnTfDU9.s:6563   .debug_str:00000000000005e5 .LASF300
     /tmp/ccnTfDU9.s:6947   .debug_str:0000000000001197 .LASF301
     /tmp/ccnTfDU9.s:6679   .debug_str:000000000000095e .LASF302
     /tmp/ccnTfDU9.s:6903   .debug_str:000000000000104d .LASF303
     /tmp/ccnTfDU9.s:6499   .debug_str:00000000000003e7 .LASF304
     /tmp/ccnTfDU9.s:7019   .debug_str:0000000000001497 .LASF305
     /tmp/ccnTfDU9.s:6767   .debug_str:0000000000000c1d .LASF306
     /tmp/ccnTfDU9.s:7061   .debug_str:0000000000001600 .LASF307
     /tmp/ccnTfDU9.s:6503   .debug_str:0000000000000408 .LASF308
     /tmp/ccnTfDU9.s:6753   .debug_str:0000000000000bc4 .LASF309
     /tmp/ccnTfDU9.s:6419   .debug_str:0000000000000198 .LASF310
     /tmp/ccnTfDU9.s:6879   .debug_str:0000000000000f81 .LASF311
     /tmp/ccnTfDU9.s:6551   .debug_str:00000000000005a6 .LASF312
     /tmp/ccnTfDU9.s:6685   .debug_str:000000000000099c .LASF313
     /tmp/ccnTfDU9.s:6585   .debug_str:0000000000000687 .LASF314
     /tmp/ccnTfDU9.s:6999   .debug_str:00000000000013e8 .LASF315
     /tmp/ccnTfDU9.s:7005   .debug_str:0000000000001420 .LASF316
     /tmp/ccnTfDU9.s:6909   .debug_str:000000000000108b .LASF317
     /tmp/ccnTfDU9.s:6651   .debug_str:000000000000087d .LASF318
     /tmp/ccnTfDU9.s:6401   .debug_str:0000000000000119 .LASF319
     /tmp/ccnTfDU9.s:6459   .debug_str:00000000000002e3 .LASF320
     /tmp/ccnTfDU9.s:7023   .debug_str:00000000000014a7 .LASF321
     /tmp/ccnTfDU9.s:6937   .debug_str:0000000000001166 .LASF322
     /tmp/ccnTfDU9.s:6761   .debug_str:0000000000000bf1 .LASF323
     /tmp/ccnTfDU9.s:6943   .debug_str:0000000000001183 .LASF324
     /tmp/ccnTfDU9.s:6369   .debug_str:000000000000001f .LASF325
     /tmp/ccnTfDU9.s:6863   .debug_str:0000000000000f33 .LASF326
     /tmp/ccnTfDU9.s:6427   .debug_str:00000000000001d6 .LASF327
     /tmp/ccnTfDU9.s:6723   .debug_str:0000000000000b06 .LASF328
     /tmp/ccnTfDU9.s:6505   .debug_str:0000000000000412 .LASF329
     /tmp/ccnTfDU9.s:6509   .debug_str:0000000000000439 .LASF330
     /tmp/ccnTfDU9.s:6521   .debug_str:000000000000049b .LASF331
     /tmp/ccnTfDU9.s:6669   .debug_str:0000000000000920 .LASF333
     /tmp/ccnTfDU9.s:6607   .debug_str:0000000000000732 .LASF334
     /tmp/ccnTfDU9.s:7073   .debug_str:0000000000001668 .LASF335
     /tmp/ccnTfDU9.s:1029   .text:00000000000004f8 .LFE106
GAS LISTING /tmp/ccnTfDU9.s 			page 47


     /tmp/ccnTfDU9.s:6453   .debug_str:00000000000002ad .LASF336
     /tmp/ccnTfDU9.s:6831   .debug_str:0000000000000e41 .LASF337
     /tmp/ccnTfDU9.s:6093   .debug_loc:0000000000000000 .LLST3
     /tmp/ccnTfDU9.s:415    .text:000000000000015c .LBB96
     /tmp/ccnTfDU9.s:458    .text:0000000000000184 .LBE96
     /tmp/ccnTfDU9.s:6875   .debug_str:0000000000000f69 .LASF338
     /tmp/ccnTfDU9.s:6112   .debug_loc:000000000000005c .LLST24
     /tmp/ccnTfDU9.s:417    .text:000000000000015c .LBB97
     /tmp/ccnTfDU9.s:433    .text:0000000000000168 .LBE97
     /tmp/ccnTfDU9.s:443    .text:000000000000017c .LBB99
     /tmp/ccnTfDU9.s:457    .text:0000000000000184 .LBE99
     /tmp/ccnTfDU9.s:6119   .debug_loc:000000000000007f .LLST25
     /tmp/ccnTfDU9.s:441    .text:000000000000017c .LVL16
     /tmp/ccnTfDU9.s:462    .text:0000000000000184 .LBB85
     /tmp/ccnTfDU9.s:512    .text:00000000000001e4 .LBE85
     /tmp/ccnTfDU9.s:6126   .debug_loc:00000000000000a2 .LLST22
     /tmp/ccnTfDU9.s:494    .text:00000000000001c0 .LBB88
     /tmp/ccnTfDU9.s:509    .text:00000000000001e4 .LBE88
     /tmp/ccnTfDU9.s:6469   .debug_str:0000000000000313 .LASF339
     /tmp/ccnTfDU9.s:6133   .debug_loc:00000000000000c5 .LLST23
     /tmp/ccnTfDU9.s:505    .text:00000000000001e0 .LVL23
     /tmp/ccnTfDU9.s:466    .text:000000000000018c .LVL18
     /tmp/ccnTfDU9.s:480    .text:00000000000001a4 .LVL21
     /tmp/ccnTfDU9.s:6347   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccnTfDU9.s:6141   .debug_loc:00000000000000e9 .LLST4
     /tmp/ccnTfDU9.s:6961   .debug_str:0000000000001202 .LASF340
     /tmp/ccnTfDU9.s:7065   .debug_str:0000000000001627 .LASF341
     /tmp/ccnTfDU9.s:6160   .debug_loc:0000000000000145 .LLST5
     /tmp/ccnTfDU9.s:6565   .debug_str:00000000000005fb .LASF342
     /tmp/ccnTfDU9.s:6171   .debug_loc:000000000000017b .LLST6
     /tmp/ccnTfDU9.s:7085   .debug_str:00000000000016d7 .LASF343
     /tmp/ccnTfDU9.s:6182   .debug_loc:00000000000001b1 .LLST7
     /tmp/ccnTfDU9.s:6553   .debug_str:00000000000005b0 .LASF344
     /tmp/ccnTfDU9.s:6190   .debug_loc:00000000000001d6 .LLST8
     /tmp/ccnTfDU9.s:6198   .debug_loc:00000000000001fb .LLST9
     /tmp/ccnTfDU9.s:6789   .debug_str:0000000000000d1b .LASF345
     /tmp/ccnTfDU9.s:6206   .debug_loc:0000000000000220 .LLST10
     /tmp/ccnTfDU9.s:6377   .debug_str:000000000000006f .LASF346
     /tmp/ccnTfDU9.s:6213   .debug_loc:0000000000000243 .LLST11
     /tmp/ccnTfDU9.s:6957   .debug_str:00000000000011eb .LASF347
     /tmp/ccnTfDU9.s:6221   .debug_loc:0000000000000268 .LLST12
     /tmp/ccnTfDU9.s:248    .text:00000000000000d8 .LBB61
     /tmp/ccnTfDU9.s:264    .text:00000000000000e4 .LBE61
     /tmp/ccnTfDU9.s:536    .text:0000000000000204 .LBB63
     /tmp/ccnTfDU9.s:547    .text:0000000000000208 .LBE63
     /tmp/ccnTfDU9.s:6232   .debug_loc:000000000000029e .LLST13
     /tmp/ccnTfDU9.s:549    .text:0000000000000208 .LBB65
     /tmp/ccnTfDU9.s:561    .text:000000000000020c .LBE65
     /tmp/ccnTfDU9.s:6239   .debug_loc:00000000000002c1 .LLST14
     /tmp/ccnTfDU9.s:654    .text:0000000000000290 .LBB67
     /tmp/ccnTfDU9.s:662    .text:0000000000000294 .LBE67
     /tmp/ccnTfDU9.s:6246   .debug_loc:00000000000002e4 .LLST15
     /tmp/ccnTfDU9.s:677    .text:00000000000002ac .LBB69
     /tmp/ccnTfDU9.s:689    .text:00000000000002bc .LBE69
     /tmp/ccnTfDU9.s:6255   .debug_loc:0000000000000309 .LLST16
     /tmp/ccnTfDU9.s:686    .text:00000000000002bc .LVL42
     /tmp/ccnTfDU9.s:690    .text:00000000000002bc .LBB71
GAS LISTING /tmp/ccnTfDU9.s 			page 48


     /tmp/ccnTfDU9.s:699    .text:00000000000002c8 .LBE71
     /tmp/ccnTfDU9.s:6262   .debug_loc:000000000000032c .LLST17
     /tmp/ccnTfDU9.s:696    .text:00000000000002c8 .LVL43
     /tmp/ccnTfDU9.s:712    .text:00000000000002d4 .LBB73
     /tmp/ccnTfDU9.s:719    .text:00000000000002d8 .LBE73
     /tmp/ccnTfDU9.s:6269   .debug_loc:000000000000034f .LLST18
     /tmp/ccnTfDU9.s:526    .text:00000000000001fc .LVL26
     /tmp/ccnTfDU9.s:602    .text:0000000000000244 .LVL33
     /tmp/ccnTfDU9.s:619    .text:0000000000000260 .LVL35
     /tmp/ccnTfDU9.s:629    .text:0000000000000270 .LVL36
     /tmp/ccnTfDU9.s:639    .text:0000000000000280 .LVL37
     /tmp/ccnTfDU9.s:668    .text:00000000000002a0 .LVL40
     /tmp/ccnTfDU9.s:725    .text:00000000000002e4 .LVL46
     /tmp/ccnTfDU9.s:735    .text:00000000000002f4 .LVL48
     /tmp/ccnTfDU9.s:754    .text:0000000000000314 .LVL50
     /tmp/ccnTfDU9.s:773    .text:0000000000000330 .LVL53
     /tmp/ccnTfDU9.s:780    .text:0000000000000344 .LVL54
     /tmp/ccnTfDU9.s:797    .text:000000000000035c .LVL56
     /tmp/ccnTfDU9.s:816    .text:000000000000037c .LVL58
     /tmp/ccnTfDU9.s:832    .text:0000000000000398 .LVL59
     /tmp/ccnTfDU9.s:846    .text:00000000000003b4 .LVL61
     /tmp/ccnTfDU9.s:855    .text:00000000000003c8 .LVL63
     /tmp/ccnTfDU9.s:869    .text:00000000000003dc .LVL65
     /tmp/ccnTfDU9.s:1018   .text:00000000000004ec .LVL84
     /tmp/ccnTfDU9.s:877    .text:00000000000003e4 .LBB77
     /tmp/ccnTfDU9.s:1001   .text:00000000000004d8 .LBE77
     /tmp/ccnTfDU9.s:6278   .debug_loc:0000000000000374 .LLST19
     /tmp/ccnTfDU9.s:6635   .debug_str:000000000000080c .LASF348
     /tmp/ccnTfDU9.s:6285   .debug_loc:0000000000000397 .LLST20
     /tmp/ccnTfDU9.s:6711   .debug_str:0000000000000a98 .LASF349
     /tmp/ccnTfDU9.s:6292   .debug_loc:00000000000003ba .LLST21
     /tmp/ccnTfDU9.s:879    .text:00000000000003e4 .LBB78
     /tmp/ccnTfDU9.s:895    .text:00000000000003f0 .LBE78
     /tmp/ccnTfDU9.s:897    .text:00000000000003f0 .LBB80
     /tmp/ccnTfDU9.s:913    .text:00000000000003fc .LBE80
     /tmp/ccnTfDU9.s:915    .text:00000000000003fc .LBB82
     /tmp/ccnTfDU9.s:931    .text:0000000000000408 .LBE82
     /tmp/ccnTfDU9.s:936    .text:0000000000000418 .LVL70
     /tmp/ccnTfDU9.s:943    .text:000000000000042c .LVL71
     /tmp/ccnTfDU9.s:948    .text:000000000000043c .LVL72
     /tmp/ccnTfDU9.s:953    .text:000000000000044c .LVL73
     /tmp/ccnTfDU9.s:960    .text:0000000000000460 .LVL74
     /tmp/ccnTfDU9.s:965    .text:0000000000000470 .LVL75
     /tmp/ccnTfDU9.s:970    .text:0000000000000480 .LVL76
     /tmp/ccnTfDU9.s:977    .text:0000000000000494 .LVL77
     /tmp/ccnTfDU9.s:982    .text:00000000000004a4 .LVL78
     /tmp/ccnTfDU9.s:987    .text:00000000000004b4 .LVL79
     /tmp/ccnTfDU9.s:994    .text:00000000000004c8 .LVL80
     /tmp/ccnTfDU9.s:999    .text:00000000000004d8 .LVL81
     /tmp/ccnTfDU9.s:204    .text:00000000000000a0 .LBB55
     /tmp/ccnTfDU9.s:220    .text:00000000000000ac .LBE55
     /tmp/ccnTfDU9.s:398    .text:0000000000000150 .LBB101
     /tmp/ccnTfDU9.s:413    .text:000000000000015c .LBE101
     /tmp/ccnTfDU9.s:6299   .debug_loc:00000000000003dd .LLST26
     /tmp/ccnTfDU9.s:383    .text:0000000000000138 .LVL12
     /tmp/ccnTfDU9.s:1022   .text:00000000000004f8 .LVL85
     /tmp/ccnTfDU9.s:62     .text:0000000000000028 .LFB105
GAS LISTING /tmp/ccnTfDU9.s 			page 49


     /tmp/ccnTfDU9.s:118    .text:0000000000000058 .LFE105
     /tmp/ccnTfDU9.s:76     .text:0000000000000038 .LBB51
     /tmp/ccnTfDU9.s:89     .text:0000000000000040 .LBE51
     /tmp/ccnTfDU9.s:6307   .debug_loc:0000000000000401 .LLST1
     /tmp/ccnTfDU9.s:102    .text:000000000000004c .LBB53
     /tmp/ccnTfDU9.s:114    .text:0000000000000054 .LBE53
     /tmp/ccnTfDU9.s:6316   .debug_loc:0000000000000427 .LLST2
     /tmp/ccnTfDU9.s:10     .text:0000000000000000 .LFB104
     /tmp/ccnTfDU9.s:56     .text:0000000000000028 .LFE104
     /tmp/ccnTfDU9.s:22     .text:000000000000000c .LBB49
     /tmp/ccnTfDU9.s:35     .text:0000000000000014 .LBE49
     /tmp/ccnTfDU9.s:6325   .debug_loc:000000000000044d .LLST0
     /tmp/ccnTfDU9.s:6801   .debug_str:0000000000000d70 .LASF350
     /tmp/ccnTfDU9.s:6833   .debug_str:0000000000000e48 .LASF351
     /tmp/ccnTfDU9.s:6873   .debug_str:0000000000000f5f .LASF352
     /tmp/ccnTfDU9.s:6969   .debug_str:0000000000001254 .LASF369
     /tmp/ccnTfDU9.s:7051   .debug_str:00000000000015af .LASF353
     /tmp/ccnTfDU9.s:7017   .debug_str:0000000000001489 .LASF354
     /tmp/ccnTfDU9.s:6461   .debug_str:00000000000002ef .LASF361
     /tmp/ccnTfDU9.s:6605   .debug_str:000000000000071f .LASF363
     /tmp/ccnTfDU9.s:6855   .debug_str:0000000000000ef4 .LASF355
     /tmp/ccnTfDU9.s:7033   .debug_str:000000000000151a .LASF356
     /tmp/ccnTfDU9.s:7053   .debug_str:00000000000015ba .LASF357
     /tmp/ccnTfDU9.s:6883   .debug_str:0000000000000fc3 .LASF358
     /tmp/ccnTfDU9.s:6825   .debug_str:0000000000000e25 .LASF359
     /tmp/ccnTfDU9.s:6439   .debug_str:0000000000000244 .LASF360
     /tmp/ccnTfDU9.s:6467   .debug_str:0000000000000304 .LASF362
     /tmp/ccnTfDU9.s:6383   .debug_str:0000000000000095 .LASF364
     /tmp/ccnTfDU9.s:218    .text:00000000000000ac .LVL7
     /tmp/ccnTfDU9.s:262    .text:00000000000000e4 .LVL8
     /tmp/ccnTfDU9.s:365    .text:0000000000000114 .LVL10
     /tmp/ccnTfDU9.s:374    .text:000000000000011c .LVL11
     /tmp/ccnTfDU9.s:454    .text:0000000000000184 .LVL17
     /tmp/ccnTfDU9.s:468    .text:0000000000000190 .LVL19
     /tmp/ccnTfDU9.s:874    .text:00000000000003e4 .LVL66
     /tmp/ccnTfDU9.s:1007   .text:00000000000004dc .LVL82
     /tmp/ccnTfDU9.s:431    .text:0000000000000168 .LVL15
     /tmp/ccnTfDU9.s:473    .text:0000000000000198 .LVL20
     /tmp/ccnTfDU9.s:499    .text:00000000000001cc .LVL22
     /tmp/ccnTfDU9.s:267    .text:00000000000000e8 .LVL9
     /tmp/ccnTfDU9.s:507    .text:00000000000001e4 .LVL24
     /tmp/ccnTfDU9.s:557    .text:000000000000020c .LVL30
     /tmp/ccnTfDU9.s:584    .text:000000000000022c .LVL31
     /tmp/ccnTfDU9.s:1010   .text:00000000000004e0 .LVL83
     /tmp/ccnTfDU9.s:519    .text:00000000000001e8 .LVL25
     /tmp/ccnTfDU9.s:530    .text:0000000000000200 .LVL27
     /tmp/ccnTfDU9.s:595    .text:0000000000000230 .LVL32
     /tmp/ccnTfDU9.s:607    .text:000000000000024c .LVL34
     /tmp/ccnTfDU9.s:764    .text:0000000000000320 .LVL51
     /tmp/ccnTfDU9.s:788    .text:0000000000000350 .LVL55
     /tmp/ccnTfDU9.s:804    .text:0000000000000368 .LVL57
     /tmp/ccnTfDU9.s:840    .text:00000000000003a0 .LVL60
     /tmp/ccnTfDU9.s:848    .text:00000000000003b8 .LVL62
     /tmp/ccnTfDU9.s:861    .text:00000000000003d0 .LVL64
     /tmp/ccnTfDU9.s:730    .text:00000000000002e8 .LVL47
     /tmp/ccnTfDU9.s:740    .text:00000000000002fc .LVL49
     /tmp/ccnTfDU9.s:768    .text:0000000000000324 .LVL52
GAS LISTING /tmp/ccnTfDU9.s 			page 50


     /tmp/ccnTfDU9.s:535    .text:0000000000000204 .LVL28
     /tmp/ccnTfDU9.s:544    .text:0000000000000208 .LVL29
     /tmp/ccnTfDU9.s:653    .text:0000000000000290 .LVL38
     /tmp/ccnTfDU9.s:660    .text:0000000000000294 .LVL39
     /tmp/ccnTfDU9.s:676    .text:00000000000002ac .LVL41
     /tmp/ccnTfDU9.s:711    .text:00000000000002d4 .LVL44
     /tmp/ccnTfDU9.s:717    .text:00000000000002d8 .LVL45
     /tmp/ccnTfDU9.s:893    .text:00000000000003f0 .LVL67
     /tmp/ccnTfDU9.s:911    .text:00000000000003fc .LVL68
     /tmp/ccnTfDU9.s:929    .text:0000000000000408 .LVL69
     /tmp/ccnTfDU9.s:397    .text:0000000000000150 .LVL13
     /tmp/ccnTfDU9.s:410    .text:000000000000015c .LVL14
     /tmp/ccnTfDU9.s:75     .text:0000000000000038 .LVL3
     /tmp/ccnTfDU9.s:85     .text:0000000000000040 .LVL4
     /tmp/ccnTfDU9.s:101    .text:000000000000004c .LVL5
     /tmp/ccnTfDU9.s:111    .text:0000000000000054 .LVL6
     /tmp/ccnTfDU9.s:21     .text:000000000000000c .LVL0
     /tmp/ccnTfDU9.s:32     .text:0000000000000014 .LVL1
     /tmp/ccnTfDU9.s:1086   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccnTfDU9.s:246    .text:00000000000000d8 .LBB60
     /tmp/ccnTfDU9.s:367    .text:0000000000000114 .LBE60
     /tmp/ccnTfDU9.s:514    .text:00000000000001e4 .LBB75
     /tmp/ccnTfDU9.s:562    .text:000000000000020c .LBE75
     /tmp/ccnTfDU9.s:590    .text:000000000000022c .LBB76
     /tmp/ccnTfDU9.s:876    .text:00000000000003e4 .LBE76
     /tmp/ccnTfDU9.s:1014   .text:00000000000004e0 .LBB84
     /tmp/ccnTfDU9.s:1024   .text:00000000000004f8 .LBE84
     /tmp/ccnTfDU9.s:1032   .gcc_except_table:0000000000000000 .LLSDA106

UNDEFINED SYMBOLS
_ZN3TCB16timeSliceCounterE
_ZN8TimeList4tickEv
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
plic_claim
plic_complete
CONSOLE_STATUS
CONSOLE_RX_DATA
_ZN7_Buffer7sys_putEc
_ZN3TCB17initThreadWithRunEPFvPvES0_Pm
_ZN3TCB19initThreadWithNoRunEPFvPvES0_Pm
_ZN3TCB5startEv
_ZN3TCB4exitEv
_ZdaPv
__mem_free
__mem_alloc
_ZN4_semnwEm
_ZN4_semC1EPPS_j
_ZN4_sem5closeEv
_ZN4_sem4waitEv
_ZN4_sem6signalEv
_ZN7_Buffer7sys_getEv
_ZN3TCB5sleepEm
_Z11printStringPKc
_Z8printIntiii
_ZN4_semdlEPv
_Unwind_Resume
GAS LISTING /tmp/ccnTfDU9.s 			page 51


__gxx_personality_v0
